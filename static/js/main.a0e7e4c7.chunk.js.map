{"version":3,"sources":["reportWebVitals.ts","utils/localStorage.ts","components/ThemeProvider.tsx","components/Header/Hamburger.tsx","components/Header/Logo.tsx","components/Header/ThemeToggler.tsx","components/Header/Header.tsx","components/TopcoderLikeCircle.tsx","utils/TypedCachedApiClient.ts","components/DifficultyCircle.tsx","utils/colors.ts","pages/TablePage/contestTableUtils.tsx","pages/TablePage/ErrorMessage.tsx","pages/TablePage/ContestTable.tsx","pages/TablePage/TableTab.tsx","pages/TablePage/index.tsx","pages/UserPage/UserNotFound.tsx","pages/UserPage/Loading.tsx","pages/UserPage/UserNameLabel.tsx","pages/UserPage/Achievement.tsx","utils/formatDate.ts","pages/UserPage/SubmissionListTable.tsx","pages/UserPage/CustomTooltip.tsx","pages/UserPage/Climbing.tsx","pages/UserPage/Heatmap.tsx","pages/UserPage/makeSolvedHistory.ts","pages/UserPage/makeSubmissionHistory.ts","pages/UserPage/userUtils.ts","pages/UserPage/index.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","useLocalStorage","key","defaultValue","a","localStorage","getItem","_React$useState","React","useState","JSON","parse","_React$useState2","_slicedToArray","value","setValue","useEffect","setItem","stringify","ThemeContext","createContext","Error","useTheme","_React$useContext","useContext","ThemeProvider","props","_useLocalStorage","_useLocalStorage2","themeId","setThemeId","_jsxs","Provider","children","_jsx","Helmet","className","concat","Hamburger","id","MenuOutlined","Logo","Link","to","ThemeToggler","theme","_Fragment","Toggle","defaultChecked","onChange","icons","checked","unchecked","colProps","xxl","xl","lg","md","sm","xs","Header","userId","setUserId","_React$useState3","_React$useState4","isOpen","setIsOpen","handleChange","e","currentTarget","history","useHistory","handleEnter","push","location","collapseId","Row","style","flexFlow","height","Col","_objectSpread","display","Input","placeholder","onPressEnter","replace","Button","disabled","onClick","Collapse","isOpened","TopcoderLikeCircle","difficulty","color","undefined","rating","colorCode","getColorCode","fillRatio","calcFillRatio","metalOption","base","highlight","styles","borderColor","background","borderStyle","big","defaultProps","CACHED_CONTESTS","DifficultyCircle","Tooltip","title","String","ratingColors","getRatingColorCode","getRatingColor","getRatingColorClass","makeColumns","n","res","dataIndex","render","text","i","alp","fromCharCode","PREFIX","filterProblemsMap","Map","STATIC_API_BASE_URL","fetchUserSubmissions","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","url","tmp","isOk","newMap","wrap","_context3","prev","next","fetch","response","ok","json","x","result","catch","error","console","message","abrupt","forEach","t","problem","contestId","index","has","get","set","verdict","stop","_x2","apply","arguments","CACHED_USER_SUBMISSIONS","cachedUserSubmissions","_ref4","_callee4","_context4","t0","t1","t2","sent","call","t3","log","_x3","fetchUserInfo","_ref5","_callee5","currentRating","isUserExist","isError","_context5","status","userRating","_x4","CACHED_USER_INFO","cachedUserInfo","_ref6","_callee6","_context6","_x5","ErrorMessage","Alert","type","ContestTable","isFetchFailure","setIsFetchFailure","submissions","setSubmissions","pageSize","setPageSize","isMounted","getUserSubmissions","_callee","_yield$Promise$all","_yield$Promise$all2","userSubmission","_context","Promise","all","allProblems","require","problemData","contestName","filter","obj","filterProblems","name","isReverseOrder","_toConsumableArray","reverse","contestTable","isShowDifficulty","map","problems","mp","cnt","contestClassName","href","rel","target","ratingColorClass","problemId","problemName","makeContestTable","columns","contest","columnNum","makeContestColumns","Fragment","Table","pagination","defaultPageSize","pageSizeOptions","page","bordered","dataSource","TableTabButtons","setContest","_useLocalStorage3","_useLocalStorage4","setIsShowDifficulty","_useLocalStorage5","_useLocalStorage6","setIsReverseOrder","Switch","size","Radio","Group","TablePage","TableTab","UserNotFound","Loading","Spin","UserNameLabel","c","userRatingCircle","badge","Badge","count","backgroundColor","Achievement","gutter","_createElement","solvedCountAll","solvedCountLastYear","solvedCountLastMonth","longestStreak","currentStreak","streakSum","formatFullDate","dateSecond","date","Date","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","hh","getHours","min","getMinutes","sec","getSeconds","formatDate","SubmissionListTable","submission","submissionSecond","creationTimeSeconds","difficultyCircle","problemIndex","submissionUrl","submissionId","problemUrl","programmingLanguage","detail","CustomTooltip","_props$payload$reduce","_props$payload","active","payload","label","margin","padding","border","whiteSpace","paddingTop","paddingBottom","reduce","acc","entry","marginTop","marginBottom","slice","dataKey","ClimbingChart","ResponsiveContainer","width","AreaChart","data","solvedHistory","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","domain","tickFormatter","YAxis","content","ratingColor","Area","isAnimationActive","stackId","stroke","fill","Climbing","Customtooltip","borderRadius","textAlign","day","MyResponsiveCalendar","ResponsiveCalendar","from","year","emptyColor","colors","minValue","textColor","yearSpacing","dayBorderWidth","dayBorderColor","monthBorderWidth","tooltip","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","Heatmap","yearsSet","Set","add","years","Array","selectYear","setSelectYear","length","Select","Option","makeSolvedHistory","cntRed","cntOrange","cntViolet","cntBlue","cntCyan","cntGreen","cntGrey","cntOther","isSolved","revSubmission","newRevSubmission","p","numSubmission","dateFormat","Red","Orange","Violet","Blue","Cyan","Green","Grey","Other","makeSubmissionHistory","submissionHistory","fetchUserSubmission","_x$result","_x","makeAchievementData","isSolvedDay","today","month","cntSolveLastYear","cntSolveLastMonth","uniqDaySubmissions","time","formatted","getTime","cntCurrentStreak","tmpTime","cntLongestStreak","Math","max","User","setIsError","setIsUserExist","_React$useState5","_React$useState6","isLoading","setIsLoading","_React$useState7","_React$useState8","setUserRating","_React$useState9","_React$useState10","setUserSubmission","_React$useState11","_React$useState12","userInfo","setUserInfo","getUserInfo","str","element","App","HashRouter","Route","path","_params$userIds","match","params","userIds","_ref2","_params$userIds2","Redirect","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e7e4c7.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport const useLocalStorage = <T>(key: string, defaultValue: T) => {\n  const a = localStorage.getItem(key);\n  const [value, setValue] = React.useState(a ? JSON.parse(a) : defaultValue);\n\n  React.useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocalStorage } from \"../utils/localStorage\";\n\ntype ThemeId = \"light\" | \"dark\" | \"purple\";\ntype ThemeContextProps = [ThemeId, (newThemeId: ThemeId) => void];\n\nexport const ThemeContext = React.createContext<ThemeContextProps>([\n  \"light\",\n  (): void => {\n    throw new Error(\"setThemeId is not implemented.\");\n  },\n]);\n\ninterface ThemeProviderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = (\n  props: ThemeProviderProps\n) => {\n  const [themeId, setThemeId] = useLocalStorage<string>(\"theme\", \"light\");\n\n  return (\n    <ThemeContext.Provider value={[themeId, setThemeId]}>\n      <Helmet>\n        <html className={`theme-${themeId}`} />\n      </Helmet>\n\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const [themeId] = React.useContext(ThemeContext);\n\n  return themeId;\n};\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport { MenuOutlined } from \"@ant-design/icons\";\n\nimport \"./Hamburger.css\";\n\nconst Hamburger: React.FunctionComponent = (props) => {\n  return (\n    <div id=\"hamburger-btn\">\n      <MenuOutlined />\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React from \"react\";\nimport \"./Logo.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Logo: React.FunctionComponent = (props) => {\n  return (\n    <h1 id=\"logo\">\n      <Link to=\"/table\">Codeforces Problems</Link>\n    </h1>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nimport Toggle from \"react-toggle\";\n\nimport \"react-toggle/style.css\";\nimport \"./ThemeToggler.css\";\n\nimport { ThemeContext, useTheme } from \"../ThemeProvider\";\n\nconst ThemeToggler = () => {\n  const [, setThemeId] = React.useContext(ThemeContext);\n  const theme = useTheme();\n\n  return (\n    <>\n      <div className=\"theme-toggler\">\n        <Toggle\n          defaultChecked={theme === \"dark\"}\n          onChange={() => {\n            setThemeId(theme === \"light\" ? \"dark\" : \"light\");\n          }}\n          icons={{\n            checked: <span className=\"toggle-icon\">🌜</span>,\n            unchecked: <span className=\"toggle-icon\">🌞</span>,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThemeToggler;\n","import React from \"react\";\nimport Hamburger from \"./Hamburger\";\nimport Logo from \"./Logo\";\nimport ThemeToggler from \"./ThemeToggler\";\nimport { Row, Col } from \"antd\";\nimport { Input, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { Collapse } from \"react-collapse\";\n\nimport \"./Header.css\";\nimport \"./InputBox.css\";\n\nconst colProps = [\n  {\n    xxl: 4,\n    xl: 5,\n    lg: 6,\n    md: 6,\n    sm: 8,\n    xs: 20,\n  },\n  {\n    xxl: 20,\n    xl: 19,\n    lg: 18,\n    md: 18,\n    sm: 16,\n    xs: 0,\n  },\n  {\n    xxl: 0,\n    xl: 0,\n    lg: 0,\n    md: 0,\n    sm: 0,\n    xs: 4,\n  },\n];\n\ninterface Props {\n  userId: string | undefined;\n  location: string;\n}\n\nconst Header: React.FunctionComponent<Props> = (props: Props) => {\n  const [userId, setUserId] = React.useState(props.userId);\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setUserId(e.currentTarget.value);\n  };\n\n  let history = useHistory();\n\n  const handleEnter = (e: React.FormEvent<HTMLInputElement>) => {\n    history.push(\"/\" + props.location + \"/\" + userId);\n  };\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  let collapseId: string = isOpen\n    ? \"collapse-isOpen-true\"\n    : \"collapse-isOpen-false\";\n\n  return (\n    <div id=\"header\">\n      <Row style={{ flexFlow: \"nowrap\", height: 56 }}>\n        <Col {...colProps[0]}>\n          <Logo />\n        </Col>\n        <Col {...colProps[1]} className=\"menu-row\" style={{ display: \"flex\" }}>\n          <div id=\"input-box\">\n            <Input\n              placeholder=\"Codeforces ID\"\n              value={userId}\n              onChange={handleChange}\n              onPressEnter={handleEnter}\n            />\n\n            <Link to={\"/table/\" + userId} replace>\n              <Button>Table</Button>\n            </Link>\n            {userId === \"\" ? (\n              <Link to={\"/user/\" + userId} replace>\n                <Button disabled>User</Button>\n              </Link>\n            ) : (\n              <Link to={\"/user/\" + userId} replace>\n                <Button>User</Button>\n              </Link>\n            )}\n          </div>\n          <ThemeToggler />\n        </Col>\n        <Col {...colProps[2]}>\n          <div onClick={() => toggleIsOpen()}>\n            <Hamburger />\n          </div>\n        </Col>\n      </Row>\n      <Collapse isOpened={isOpen}>\n        <div className={collapseId}>\n          <div id=\"input-box\">\n            <Input\n              placeholder=\"Codeforces ID\"\n              value={userId}\n              onChange={handleChange}\n              onPressEnter={handleEnter}\n            />\n            <Link to={\"/table/\" + userId} replace>\n              <Button>Table</Button>\n            </Link>\n            {userId === \"\" ? (\n              <Link to={\"/user/\" + userId} replace>\n                <Button disabled>User</Button>\n              </Link>\n            ) : (\n              <Link to={\"/user/\" + userId} replace>\n                <Button>User</Button>\n              </Link>\n            )}\n          </div>\n          <ThemeToggler />\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useTheme } from \"./ThemeProvider\";\n\nfunction getColor(difficulty: number | undefined): string {\n  let color: string;\n\n  if (difficulty === undefined) {\n    color = \"black\";\n  } else if (difficulty < 1200) {\n    color = \"grey\";\n  } else if (difficulty < 1400) {\n    color = \"green\";\n  } else if (difficulty < 1600) {\n    color = \"cyan\";\n  } else if (difficulty < 1900) {\n    color = \"blue\";\n  } else if (difficulty < 2100) {\n    color = \"violet\";\n  } else if (difficulty < 2400) {\n    color = \"orange\";\n  } else if (difficulty < 2600) {\n    color = \"red\";\n  } else if (difficulty < 2900) {\n    color = \"bronze\";\n  } else if (difficulty < 3200) {\n    color = \"silver\";\n  } else {\n    color = \"gold\";\n  }\n\n  return color;\n}\n\nfunction getColorCode(difficulty: number, theme: string): string {\n  let color: string;\n\n  if (difficulty < 1200) {\n    color = theme === \"dark\" ? \"#C0C0C0\" : \"#808080\";\n  } else if (difficulty < 1400) {\n    color = theme === \"dark\" ? \"#3FAF3F\" : \"#008000\";\n  } else if (difficulty < 1600) {\n    color = theme === \"dark\" ? \"#42E0E0\" : \"#03A89E\";\n  } else if (difficulty < 1900) {\n    color = theme === \"dark\" ? \"#8888FF\" : \"#0000FF\";\n  } else if (difficulty < 2100) {\n    color = theme === \"dark\" ? \"#BA55D3\" : \"#AA00AA\";\n  } else if (difficulty < 2400) {\n    color = \"#FF8C00\";\n  } else if (difficulty < 2600) {\n    color = theme === \"dark\" ? \"#FF375F\" : \"#FF0000\";\n  } else if (difficulty < 2900) {\n    color = \"#965C2C\";\n  } else if (difficulty < 3200) {\n    color = \"#808080\";\n  } else {\n    color = \"#FFD700\";\n  }\n\n  return color;\n}\n\nfunction calcFillRatio(difficulty: number): number {\n  let fillRatio: number = 0;\n\n  if (difficulty < 1200) {\n    fillRatio = (difficulty - 800) / 400;\n  } else if (difficulty < 1400) {\n    fillRatio = 1 - (1400 - difficulty) / 200;\n  } else if (difficulty < 1600) {\n    fillRatio = 1 - (1600 - difficulty) / 200;\n  } else if (difficulty < 1900) {\n    fillRatio = 1 - (1900 - difficulty) / 300;\n  } else if (difficulty < 2100) {\n    fillRatio = 1 - (2100 - difficulty) / 200;\n  } else if (difficulty < 2400) {\n    fillRatio = 1 - (2400 - difficulty) / 300;\n  } else if (difficulty < 2600) {\n    fillRatio = 1 - (2600 - difficulty) / 200;\n  } else {\n    fillRatio = 1.0;\n  }\n\n  return fillRatio;\n}\n\ninterface Props {\n  rating: number;\n  // optional props\n  big?: boolean;\n}\n\nconst TopcoderLikeCircle: React.FunctionComponent<Props> = (props) => {\n  const color = getColor(props.rating);\n  const theme = useTheme();\n  const colorCode = getColorCode(props.rating, theme);\n  const fillRatio = calcFillRatio(props.rating);\n\n  const isMetal = color === \"bronze\" || color === \"silver\" || color === \"gold\";\n\n  let metalOption = {\n    base: \"\",\n    highlight: \"\",\n  };\n  if (color === \"bronze\") {\n    metalOption = { base: \"#965C2C\", highlight: \"#FFDABD\" };\n  }\n  if (color === \"silver\") {\n    metalOption = { base: \"#808080\", highlight: \"white\" };\n  }\n  if (color === \"gold\") {\n    metalOption = { base: \"#FFD700\", highlight: \"white\" };\n  }\n\n  const styles = isMetal\n    ? {\n        borderColor: colorCode,\n        background: `linear-gradient(to right, \\\n        ${metalOption.base}, ${metalOption.highlight}, ${metalOption.base}`,\n        color: colorCode,\n      }\n    : {\n        borderColor: colorCode,\n        borderStyle: \"solid\",\n        background: `linear-gradient(to top, \\\n        ${colorCode} 0%, \\\n        ${colorCode} ${fillRatio * 100}%, \\\n        rgba(0,0,0,0) ${fillRatio * 100}%, \\\n        rgba(0,0,0,0) 100%)`,\n        color: colorCode,\n      };\n  return (\n    <span\n      className={\n        props.big ? \"big-difficulty-circle\" : \"common-difficulty-circle\"\n      }\n      style={styles}\n    ></span>\n  );\n};\n\n// default Props\nTopcoderLikeCircle.defaultProps = {\n  big: false,\n};\n\nexport default TopcoderLikeCircle;\n","const STATIC_API_BASE_URL = \"https://codeforces.com/api\";\n\nlet CACHED_CONTESTS: any[];\nexport const cachedContestArray = () => {\n  if (CACHED_CONTESTS === undefined) {\n    CACHED_CONTESTS = require(\"./contests.json\");\n  }\n  return CACHED_CONTESTS;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst fetchProblems = async (url: string): Promise<any> => {\n  let tmp = new Map();\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      let array = x.result.problems;\n      let mp = new Map();\n      array.reverse().forEach((element: any) => {\n        const contestId = element.contestId;\n        if (mp.has(contestId)) {\n          const prevArray = mp.get(contestId);\n          mp.set(contestId, [...prevArray, element]);\n        } else {\n          mp.set(contestId, [element]);\n        }\n      });\n      tmp = mp;\n    });\n  return tmp;\n};\n\nlet CACHED_PROBLEMS: any;\nexport const cachedProblemMap = async (): Promise<any> => {\n  if (CACHED_PROBLEMS === undefined) {\n    try {\n      CACHED_PROBLEMS = await fetchProblems(\n        STATIC_API_BASE_URL + \"/problemset.problems\"\n      );\n    } catch (e) {\n      // console.log(e);\n      CACHED_PROBLEMS = new Map();\n    }\n  }\n  return CACHED_PROBLEMS;\n};\n\nconst fetchUserSubmissions = async (url: string): Promise<any> => {\n  let tmp: any = [];\n  let isOk = true;\n  await fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    })\n    .then((x) => {\n      tmp = x.result;\n    })\n    .catch((error) => {\n      console.error(\"Error: \", error.message);\n      isOk = false;\n    });\n\n  if (!isOk) {\n    return null;\n  }\n  let newMap: Map<string, boolean> = new Map();\n\n  tmp.forEach((x: any) => {\n    let t = String(x.problem.contestId) + x.problem.index;\n\n    if (newMap.has(t)) {\n      const prev = newMap.get(t);\n      newMap.set(t, prev || x.verdict === \"OK\");\n    } else {\n      newMap.set(t, x.verdict === \"OK\");\n    }\n  });\n\n  return newMap;\n};\n\nlet CACHED_USER_SUBMISSIONS: Map<string, any> = new Map();\nexport const cachedUserSubmissions = async (userId: string): Promise<any> => {\n  const prefixStr = \"https://codeforces.com/api/user.status?handle=\";\n  const url = prefixStr + userId;\n\n  if (CACHED_USER_SUBMISSIONS.get(userId) === undefined) {\n    try {\n      CACHED_USER_SUBMISSIONS.set(userId, await fetchUserSubmissions(url));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return CACHED_USER_SUBMISSIONS.get(userId);\n};\n\nconst fetchUserInfo = async (url: string): Promise<any> => {\n  let currentRating: number = 0;\n  let isUserExist: boolean = true;\n  let isError: boolean = false;\n\n  await fetch(url)\n    .then((res) => res.json())\n    .catch(() => {\n      isError = true;\n    })\n    .then((x) => {\n      if (x.status !== \"OK\") {\n        isUserExist = false;\n      }\n      currentRating = x.result[0].rating;\n    })\n    .catch((error) => {\n      console.log(\"Error: \", error.message);\n      return;\n    });\n\n  return {\n    isUserExist: isUserExist,\n    isError: isError,\n    userRating: currentRating,\n  };\n};\n\nlet CACHED_USER_INFO: Map<string, any> = new Map();\nexport const cachedUserInfo = async (userId: string): Promise<any> => {\n  if (CACHED_USER_INFO.get(userId) === undefined) {\n    try {\n      CACHED_USER_INFO.set(\n        userId,\n        await fetchUserInfo(\n          STATIC_API_BASE_URL + \"/user.info?handles=\" + userId\n        )\n      );\n    } catch (e) {\n      // console.log(e);\n      CACHED_PROBLEMS = new Map();\n    }\n  }\n  return CACHED_USER_INFO.get(userId);\n};\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\nimport TopcoderLikeCircle from \"./TopcoderLikeCircle\";\n\ninterface Props {\n  rating: number | undefined;\n}\n\nconst DifficultyCircle: React.FunctionComponent<Props> = (props) => {\n  if (props.rating === undefined) {\n    return (\n      <Tooltip title=\"Difficulty is unavailable.\" color=\"black\">\n        <span className=\"common-difficulty-circle difficulty-unavailable-circle\"></span>\n      </Tooltip>\n    );\n  }\n  return (\n    <Tooltip title={\"Difficulty :\" + String(props.rating)} color=\"black\">\n      <span>\n        <TopcoderLikeCircle rating={props.rating} />\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default DifficultyCircle;\n","export type RatingColor =\n  | \"Black\"\n  | \"Grey\"\n  | \"Green\"\n  | \"Cyan\"\n  | \"Blue\"\n  | \"Violet\"\n  | \"Orange\"\n  | \"Red\";\n\nexport const ratingColors: RatingColor[] = [\n  \"Red\",\n  \"Orange\",\n  \"Violet\",\n  \"Blue\",\n  \"Cyan\",\n  \"Green\",\n  \"Grey\",\n  \"Black\",\n];\n\nexport const getRatingColorCode = (color: RatingColor): string => {\n  switch (color) {\n    case \"Black\":\n      return \"#000000\";\n    case \"Grey\":\n      return \"#808080\";\n    case \"Green\":\n      return \"#008000\";\n    case \"Cyan\":\n      return \"#03A89E\";\n    case \"Blue\":\n      return \"#0000FF\";\n    case \"Violet\":\n      return \"#AA00AA\";\n    case \"Orange\":\n      return \"#FF8C00\";\n    case \"Red\":\n      return \"#FF0000\";\n  }\n};\n\nexport const getRatingColor = (rating: number | undefined): RatingColor => {\n  let ratingColor: RatingColor;\n\n  if (rating === undefined) {\n    ratingColor = \"Black\";\n  } else if (rating < 1200) {\n    ratingColor = \"Grey\";\n  } else if (rating < 1400) {\n    ratingColor = \"Green\";\n  } else if (rating < 1600) {\n    ratingColor = \"Cyan\";\n  } else if (rating < 1900) {\n    ratingColor = \"Blue\";\n  } else if (rating < 2100) {\n    ratingColor = \"Violet\";\n  } else if (rating < 2400) {\n    ratingColor = \"Orange\";\n  } else {\n    ratingColor = \"Red\";\n  }\n\n  return ratingColor;\n};\n\nexport type RatingColorClassName =\n  | \"difficulty-black\"\n  | \"difficulty-grey\"\n  | \"difficulty-green\"\n  | \"difficulty-cyan\"\n  | \"difficulty-blue\"\n  | \"difficulty-violet\"\n  | \"difficulty-orange\"\n  | \"difficulty-red\";\n\nexport const getRatingColorClass = (\n  rating: number | undefined\n): RatingColorClassName => {\n  const ratingColor: RatingColor = getRatingColor(rating);\n  switch (ratingColor) {\n    case \"Black\":\n      return \"difficulty-black\";\n    case \"Grey\":\n      return \"difficulty-grey\";\n    case \"Green\":\n      return \"difficulty-green\";\n    case \"Cyan\":\n      return \"difficulty-cyan\";\n    case \"Blue\":\n      return \"difficulty-blue\";\n    case \"Violet\":\n      return \"difficulty-violet\";\n    case \"Orange\":\n      return \"difficulty-orange\";\n    case \"Red\":\n      return \"difficulty-red\";\n  }\n};\n","import React from \"react\";\nimport DifficultyCircle from \"../../components/DifficultyCircle\";\n\nimport { getRatingColorClass } from \"../../utils/colors\";\n\nexport const makeColumns = (n: number) => {\n  let res = [\n    {\n      title: \"Contest\",\n      dataIndex: \"name\",\n      render: (text: string) => text,\n    },\n  ];\n  for (let i = 0; i < n; i++) {\n    const alp: string = String.fromCharCode(65 + i);\n    res.push({\n      title: alp,\n      dataIndex: alp,\n      render: (text: string) => text,\n    });\n  }\n  return res;\n};\n\nexport const makeContestColumns = (contest: string) => {\n  let columnNum: number = 9;\n\n  switch (contest) {\n    case \"Educational Codeforces Rounds\":\n      columnNum = 9;\n      break;\n    case \"Codeforces Global Rounds\":\n      columnNum = 9;\n      break;\n    case \"Div. 1 + Div. 2 Contests\":\n      columnNum = 9;\n      break;\n    case \"Div. 1 Contests\":\n      columnNum = 7;\n      break;\n    case \"Div. 2 Contests\":\n      columnNum = 8;\n      break;\n    case \"Div. 3 Contests\":\n      columnNum = 8;\n      break;\n    case \"Div. 4 Contests\":\n      columnNum = 8;\n      break;\n    case \"ICPC\":\n      columnNum = 15;\n      break;\n    case \"Kotlin Heroes\":\n      columnNum = 10;\n      break;\n    case \"Q#\":\n      columnNum = 9;\n      break;\n    case \"Other Contests\":\n      columnNum = 15;\n      break;\n    case \"All Contests\":\n      columnNum = 15;\n      break;\n  }\n\n  let columns = makeColumns(columnNum);\n\n  if (contest === \"Microsoft Q# Coding Contests\") {\n    columns = [\n      ...makeColumns(9),\n      {\n        title: \"U\",\n        dataIndex: \"U\",\n        render: (text: string) => text,\n      },\n    ];\n  }\n  return columns;\n};\n\nconst PREFIX = \"https://codeforces.com/contest/\";\n\nexport const makeContestTable = (\n  problemData: object[],\n  isShowDifficulty: boolean,\n  submissions: Map<string, boolean>\n) => {\n  return problemData.map((x: any) => {\n    let obj: any = {};\n    let contestId = x.id;\n    let contestName = x.name;\n    let problems = x.problems;\n\n    let isOk: boolean = problems !== null ? true : false;\n\n    let mp: Map<string, number> = new Map();\n\n    if (problems !== null) {\n      problems.forEach((e: any) => {\n        const t = submissions!.get(String(x.id) + String(e.index));\n        isOk = isOk && (t === undefined ? false : t);\n\n        let cnt = mp.get(e.index[0]);\n        if (cnt === undefined) {\n          cnt = 1;\n        } else {\n          cnt++;\n        }\n        mp.set(e.index[0], cnt);\n      });\n    }\n\n    const contestClassName = isOk\n      ? \"cell-element cell-height-1 OK\"\n      : \"cell-element cell-height-1\";\n\n    obj[\"name\"] = (\n      <div className={contestClassName}>\n        <a\n          href={PREFIX + String(contestId)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {contestName}\n        </a>\n      </div>\n    );\n\n    if (problems === null) {\n      return obj;\n    }\n\n    problems.forEach((e: any) => {\n      const ratingColorClass = isShowDifficulty\n        ? getRatingColorClass(e.rating)\n        : \"difficulty-black\";\n      const problemId: string = e.index;\n      const problemName: string = e.name;\n\n      const tmp = submissions!.get(contestId + problemId);\n\n      let className: string =\n        \"cell-element cell-height-\" + String(mp.get(e.index[0]));\n\n      if (tmp !== undefined) {\n        className += \" \" + (tmp ? \"OK\" : \"NG\");\n      }\n\n      obj[problemId[0]] = (\n        <>\n          {obj[problemId[0]] !== undefined ? (\n            <>\n              {obj[problemId[0]]}\n              <div className={className}>\n                {isShowDifficulty && <DifficultyCircle rating={e.rating} />}\n                <a\n                  href={PREFIX + String(x.id) + \"/problem/\" + e.index}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  className={ratingColorClass}\n                >\n                  {String(e.index) + \". \" + problemName}\n                </a>\n              </div>\n            </>\n          ) : (\n            <div className={className}>\n              {isShowDifficulty && <DifficultyCircle rating={e.rating} />}\n              <a\n                href={PREFIX + String(x.id) + \"/problem/\" + e.index}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                className={ratingColorClass}\n              >\n                {String(e.index) + \". \" + problemName}\n              </a>\n            </div>\n          )}\n        </>\n      );\n    });\n    return obj;\n  });\n};\n\nlet filterProblemsMap: Map<string, object[]> = new Map();\n\nexport const filterProblems = (\n  contestName: string,\n  allProblems: object[]\n): object[] => {\n  let problemData;\n\n  let a = filterProblemsMap.get(contestName);\n  if (a !== undefined) {\n    return a;\n  }\n\n  if (contestName === \"All Contests\") {\n    problemData = allProblems;\n    filterProblemsMap.set(\"All Contests\", problemData);\n  } else if (contestName === \"Educational Codeforces Rounds\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Educational\";\n    });\n    filterProblemsMap.set(\"Educational Codeforces Rounds\", problemData);\n  } else if (contestName === \"Codeforces Global Rounds\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Global\";\n    });\n    filterProblemsMap.set(\"Codeforces Global Rounds\", problemData);\n  } else if (contestName === \"Div. 1 + Div. 2 Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Div1 + Div2\";\n    });\n    filterProblemsMap.set(\"Div. 1 + Div. 2 Contests\", problemData);\n  } else if (contestName === \"Div. 1 Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Div1\";\n    });\n    filterProblemsMap.set(\"Div. 1 Contests\", problemData);\n  } else if (contestName === \"Div. 2 Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Div2\";\n    });\n    filterProblemsMap.set(\"Div. 2 Contests\", problemData);\n  } else if (contestName === \"Div. 3 Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Div3\";\n    });\n    filterProblemsMap.set(\"Div. 3 Contests\", problemData);\n  } else if (contestName === \"Div. 4 Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Div4\";\n    });\n    filterProblemsMap.set(\"Div. 4 Contests\", problemData);\n  } else if (contestName === \"Kotlin Heroes\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Kotlin\";\n    });\n    filterProblemsMap.set(\"Kotlin Heroes\", problemData);\n  } else if (contestName === \"ICPC\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"ICPC\";\n    });\n    filterProblemsMap.set(\"ICPC\", problemData);\n  } else if (contestName === \"Microsoft Q# Coding Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Q#\";\n    });\n    filterProblemsMap.set(\"Microsoft Q# Coding Contests\", problemData);\n  } else if (contestName === \"Other Contests\") {\n    problemData = allProblems.filter((obj: any) => {\n      return obj.type === \"Other\";\n    });\n    filterProblemsMap.set(\"Other Contests\", problemData);\n  }\n\n  if (problemData !== undefined) {\n    return problemData;\n  } else {\n    return [];\n  }\n};\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nconst ErrorMessage: React.FunctionComponent = (props) => {\n  return (\n    <Alert\n      message=\"Failure to fetch submissions data. Codeforces is down now or you may mistyped.\"\n      type=\"error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { Table } from \"antd\";\n\nimport {\n  makeContestColumns,\n  makeContestTable,\n  filterProblems,\n} from \"./contestTableUtils\";\n\nimport { useLocalStorage } from \"../../utils/localStorage\";\n\nimport {\n  cachedUserSubmissions,\n  cachedContestArray,\n} from \"../../utils/TypedCachedApiClient\";\n\nimport ErrorMessage from \"./ErrorMessage\";\n\ninterface ContestTableProps {\n  name: string;\n  isShowDifficulty: boolean;\n  isReverseOrder: boolean;\n  userId: string | undefined;\n}\n\nconst ContestTable: React.FC<ContestTableProps> = (props) => {\n  const [isFetchFailure, setIsFetchFailure] = React.useState(false);\n  const [submissions, setSubmissions] = React.useState(new Map());\n  const [pageSize, setPageSize] = useLocalStorage(\"pageSize\", 50);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    if (props.userId === undefined || props.userId === \"\") {\n      if (isMounted) {\n        setSubmissions(new Map());\n      }\n      return;\n    }\n\n    const getUserSubmissions = async () => {\n      const [userSubmission] = await Promise.all([\n        cachedUserSubmissions(String(props.userId)),\n      ]);\n\n      if (isMounted) {\n        if (userSubmission === null) {\n          setIsFetchFailure(true);\n          setSubmissions(new Map());\n        } else {\n          setIsFetchFailure(false);\n          setSubmissions(userSubmission);\n        }\n      }\n    };\n\n    void getUserSubmissions();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [props.userId]);\n\n  const allProblems = cachedContestArray();\n  let problemData = filterProblems(props.name, allProblems);\n\n  if (props.isReverseOrder) {\n    problemData = [...problemData].reverse();\n  }\n\n  let contestTable = makeContestTable(\n    problemData,\n    props.isShowDifficulty,\n    submissions\n  );\n\n  const columns = makeContestColumns(props.name);\n\n  return (\n    <React.Fragment>\n      <h2>{props.name}</h2>\n      {isFetchFailure && <ErrorMessage />}\n      <Table\n        pagination={{\n          defaultPageSize: pageSize,\n          pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"150\"],\n          onChange: (page, pageSize) => {\n            setPageSize(pageSize);\n          },\n        }}\n        bordered\n        className=\"ant-contest-table\"\n        columns={columns}\n        dataSource={contestTable}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ContestTable;\n","import React from \"react\";\n\nimport { Radio, Switch } from \"antd\";\n\nimport ContestTable from \"./ContestTable\";\nimport { useLocalStorage } from \"../../utils/localStorage\";\n\ntype Props = {\n  userId: string;\n};\n\nconst TableTabButtons: React.FunctionComponent<Props> = (props: Props) => {\n  const [contest, setContest] = useLocalStorage(\n    \"activeTab\",\n    \"Educational Codeforces Rounds\"\n  );\n\n  const [isShowDifficulty, setIsShowDifficulty] = useLocalStorage(\n    \"isShowDifficulty\",\n    true\n  );\n\n  const [isReverseOrder, setIsReverseOrder] = useLocalStorage(\n    \"isReverseOrder\",\n    false\n  );\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"inline-btn\">\n          {isShowDifficulty ? (\n            <Switch\n              size=\"small\"\n              defaultChecked\n              onChange={(e) => {\n                setIsShowDifficulty(!isShowDifficulty);\n              }}\n            />\n          ) : (\n            <Switch\n              size=\"small\"\n              onChange={(e) => {\n                setIsShowDifficulty(!isShowDifficulty);\n              }}\n            />\n          )}\n\n          <label>Show Difficulty</label>\n        </div>\n\n        <div className=\"inline-btn\">\n          {isReverseOrder ? (\n            <Switch\n              size=\"small\"\n              defaultChecked\n              onChange={(e) => {\n                setIsReverseOrder(!isReverseOrder);\n              }}\n            />\n          ) : (\n            <Switch\n              size=\"small\"\n              onChange={(e) => {\n                setIsReverseOrder(!isReverseOrder);\n              }}\n            />\n          )}\n          <label>Reverse Order</label>\n        </div>\n      </div>\n\n      <Radio.Group\n        value={contest}\n        id=\"radio-buttons\"\n        size=\"large\"\n        onChange={(e) => {\n          setContest(e.target.value);\n        }}\n      >\n        <Radio.Button value=\"Educational Codeforces Rounds\">\n          Educational\n        </Radio.Button>\n        <Radio.Button value=\"Codeforces Global Rounds\">Global</Radio.Button>\n        <Radio.Button value=\"Div. 1 + Div. 2 Contests\">\n          Div1 + Div2\n        </Radio.Button>\n        <Radio.Button value=\"Div. 1 Contests\">Div1</Radio.Button>\n        <Radio.Button value=\"Div. 2 Contests\">Div2</Radio.Button>\n        <Radio.Button value=\"Div. 3 Contests\">Div3</Radio.Button>\n        <Radio.Button value=\"Div. 4 Contests\">Div4</Radio.Button>\n        <Radio.Button value=\"ICPC\">ICPC</Radio.Button>\n        <Radio.Button value=\"Kotlin Heroes\">Kotlin</Radio.Button>\n        <Radio.Button value=\"Microsoft Q# Coding Contests\">Q#</Radio.Button>\n        <Radio.Button value=\"Other Contests\">Others</Radio.Button>\n        <Radio.Button value=\"All Contests\">All</Radio.Button>\n      </Radio.Group>\n\n      <ContestTable\n        name={contest}\n        isShowDifficulty={isShowDifficulty}\n        isReverseOrder={isReverseOrder}\n        userId={props.userId}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default TableTabButtons;\n","import React from \"react\";\nimport Header from \"../../components/Header/Header\";\n\nimport TableTab from \"./TableTab\";\n\ntype Props = {\n  userId: string;\n};\n\nconst TablePage: React.FunctionComponent<Props> = (props: Props) => {\n  return (\n    <React.Fragment>\n      <Header userId={props.userId} location=\"table\" />\n      <div className=\"Main\">\n        <TableTab userId={props.userId} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TablePage;\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nconst UserNotFound: React.FunctionComponent = (props) => {\n  return <Alert message=\"User not found!\" type=\"error\" />;\n};\n\nexport default UserNotFound;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loading: React.FunctionComponent = (props) => {\n  return <Spin size=\"large\" />;\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { getRatingColorClass } from \"../../utils/colors\";\nimport { Tooltip } from \"antd\";\n\nimport TopcoderLikeCircle from \"../../components/TopcoderLikeCircle\";\n\ninterface Props {\n  userId: string;\n  rating: number;\n}\n\nconst UserNameLabel: React.FunctionComponent<Props> = (props: Props) => {\n  const c = getRatingColorClass(props.rating);\n  const userRatingCircle =\n    props.rating === undefined ? (\n      <Tooltip title=\"Unrated\" color=\"black\">\n        <div className=\"difficulty-unavailable-circle\">\n          <span className=\"big-difficulty-circle\"></span>\n        </div>\n      </Tooltip>\n    ) : (\n      <Tooltip title={\"Rating: \" + String(props.rating)} color=\"black\">\n        <TopcoderLikeCircle rating={props.rating} big={true} />{\" \"}\n      </Tooltip>\n    );\n\n  return (\n    <h3>\n      {userRatingCircle}{\" \"}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={\"https://codeforces.com/profile/\" + props.userId}\n        className={c}\n      >\n        {props.userId}\n      </a>\n    </h3>\n  );\n};\n\nexport default UserNameLabel;\n","import React from \"react\";\nimport { Row, Col, Badge, Tooltip } from \"antd\";\n\ninterface Props {\n  userId: string;\n  solvedCountAll: number;\n  solvedCountLastYear: number;\n  solvedCountLastMonth: number;\n  longestStreak: number;\n  currentStreak: number;\n  streakSum: number;\n}\n\nconst colProps = {\n  xxl: 8,\n  xl: 8,\n  lg: 8,\n  md: 8,\n  sm: 8,\n  xs: 12,\n};\n\nconst badge = (\n  <Tooltip title=\"Each achievement is based on Local Time.\" color=\"black\">\n    <span>\n      <Badge\n        title=\"\"\n        count=\"?\"\n        style={{ backgroundColor: \"#6c757d\", borderColor: \"#6c757d\" }}\n      />\n    </span>\n  </Tooltip>\n);\n\nconst Achievement: React.FunctionComponent<Props> = (props: Props) => {\n  return (\n    <React.Fragment>\n      <h3>Achievements {badge}</h3>\n      <hr />\n\n      <Row gutter={10}>\n        <Col {...colProps} key=\"solved-all\" className=\"achievement-item\">\n          <h6>solved for all time</h6>\n          <h4>{props.solvedCountAll} problems</h4>\n        </Col>\n        <Col {...colProps} key=\"solved-year\" className=\"achievement-item\">\n          <h6>solved for the last year</h6>\n          <h4>{props.solvedCountLastYear} problems</h4>\n        </Col>\n        <Col {...colProps} key=\"solved-month\" className=\"achievement-item\">\n          <h6>solved for the last month</h6>\n          <h4>{props.solvedCountLastMonth} problems</h4>\n        </Col>\n      </Row>\n      <Row gutter={10}>\n        <Col {...colProps} key=\"longest-streak\" className=\"achievement-item\">\n          <h6>Longest Streak</h6>\n          <h4>{props.longestStreak} days</h4>\n        </Col>\n        <Col {...colProps} key=\"current-streak\" className=\"achievement-item\">\n          <h6>Current Streak</h6>\n          <h4>{props.currentStreak} days</h4>\n        </Col>\n        <Col {...colProps} key=\"streak-sum\" className=\"achievement-item\">\n          <h6>Streak Sum</h6>\n          <h4>{props.streakSum} days</h4>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Achievement;\n","export const formatFullDate = (dateSecond: number): string => {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  const hh = String(date.getHours()).padStart(2, \"0\");\n  const min = String(date.getMinutes()).padStart(2, \"0\");\n  const sec = String(date.getSeconds()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd} ${hh}:${min}:${sec}`;\n};\n\nexport const formatDate = (dateSecond: number): string => {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd}`;\n};\n","import React from \"react\";\n\nimport { Table } from \"antd\";\nimport DifficultyCircle from \"../../components/DifficultyCircle\";\nimport { getRatingColorClass } from \"../../utils/colors\";\nimport { formatFullDate } from \"../../utils/formatDate\";\n\nconst columns = [\n  {\n    title: \"Date\",\n    dataIndex: \"creationTimeSeconds\",\n    key: \"creationTimeSeconds\",\n  },\n  {\n    title: \"Problem\",\n    dataIndex: \"problem\",\n    key: \"problem\",\n  },\n  {\n    title: \"Verdict\",\n    dataIndex: \"verdict\",\n    key: \"verdict\",\n  },\n  {\n    title: \"Language\",\n    dataIndex: \"programmingLanguage\",\n    key: \"programmingLanguage\",\n  },\n  {\n    title: \"Detail\",\n    dataIndex: \"detail\",\n    key: \"detail\",\n  },\n];\n\ninterface Props {\n  submission: any[];\n}\n\nconst SubmissionListTable: React.FunctionComponent<Props> = (props: Props) => {\n  const dataSource = props.submission.map((x) => {\n    const submissionSecond = x.creationTimeSeconds;\n    const rating: number | undefined = x.problem.rating;\n    const difficultyCircle = <DifficultyCircle rating={x.problem.rating} />;\n\n    const contestId: string = String(x.problem.contestId);\n    const problemIndex: string = String(x.problem.index);\n    const submissionId: string = String(x.submissionId);\n    const submissionUrl: string =\n      \"https://codeforces.com/contest/\" +\n      contestId +\n      \"/submission/\" +\n      submissionId;\n    const problemUrl: string =\n      \"https://codeforces.com/contest/\" +\n      contestId +\n      \"/problem/\" +\n      problemIndex;\n\n    let verdict = x.verdict;\n    switch (verdict) {\n      case undefined:\n        verdict = \"unknown\";\n        break;\n      case \"OK\":\n        verdict = <div className=\"verdict-accepted\">Accepted</div>;\n        break;\n      case \"WRONG_ANSWER\":\n        verdict = <div className=\"verdict-rejected\">Wrong answer</div>;\n        break;\n      case \"TIME_LIMIT_EXCEEDED\":\n        verdict = <div className=\"verdict-rejected\">Time limit exceeded</div>;\n        break;\n      case \"COMPILATION_ERROR\":\n        verdict = <div className=\"verdict-rejected\">Compilation error</div>;\n        break;\n      case \"MEMORY_LIMIT_EXCEEDED\":\n        verdict = <div className=\"verdict-rejected\">Memory limit exceeded</div>;\n        break;\n      case \"RUNTIME_ERROR\":\n        verdict = <div className=\"verdict-rejected\">Runtime error</div>;\n        break;\n      case \"PRESENTATION_ERROR\":\n        verdict = <div className=\"verdict-rejected\">Presentation error</div>;\n        break;\n      case \"IDLENESS_LIMIT_EXCEEDED\":\n        verdict = (\n          <div className=\"verdict-rejected\">Idleness limit exceeded</div>\n        );\n        break;\n    }\n\n    const obj = {\n      key: String(x.creationTimeSeconds),\n      creationTimeSeconds: (\n        <div className=\"cell-element\">{formatFullDate(submissionSecond)}</div>\n      ),\n      problem: (\n        <div className=\"cell-element\">\n          {difficultyCircle}\n          <a\n            href={problemUrl}\n            target=\"_blank\"\n            rel=\"noopenner noreferrer\"\n            className={getRatingColorClass(rating)}\n          >\n            {String(x.problem.index) + \". \" + String(x.problem.name)}\n          </a>\n        </div>\n      ),\n      programmingLanguage: (\n        <div className=\"cell-element\">{String(x.programmingLanguage)}</div>\n      ),\n      verdict: <div className=\"cell-element\">{verdict}</div>,\n      detail: (\n        <div className=\"cell-element\">\n          <a href={submissionUrl} target=\"_blank\" rel=\"noopenner noreferrer\">\n            Detail\n          </a>\n        </div>\n      ),\n    };\n    return obj;\n  });\n\n  return (\n    <React.Fragment>\n      <h3>Submissions</h3>\n      <hr />\n      <br />\n      <Table bordered={true} dataSource={dataSource} columns={columns} />\n    </React.Fragment>\n  );\n};\n\nexport default SubmissionListTable;\n","import { RatingColor, getRatingColorCode } from \"../../utils/colors\";\n\nimport { formatDate } from \"../../utils/formatDate\";\n\ninterface DailyEffortTooltipPayload {\n  value: number;\n  dataKey: RatingColor;\n}\n\ninterface CustomTooltipProps {\n  active?: boolean;\n  payload?: DailyEffortTooltipPayload[];\n  label: number;\n}\n\nexport const CustomTooltip: React.FunctionComponent<CustomTooltipProps> = (\n  props\n) => {\n  if (!props.active || props.payload === undefined) return null;\n\n  const dateSecond = props.label;\n\n  return (\n    <div\n      className=\"recharts-default-tooltip\"\n      style={{\n        margin: \"0px\",\n        padding: \"10px\",\n        backgroundColor: \"rgb(255, 255, 255)\",\n        border: \"1px solid rgb(204, 204, 204)\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      <p className=\"recharts-tooltip-label\" style={{ margin: \"0px\" }}>\n        {formatDate(dateSecond)}\n      </p>\n\n      <ul\n        className=\"recharts-tooltip-item-list\"\n        style={{ padding: \"0px\", margin: \"0px\" }}\n      >\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: \"4px\",\n            paddingBottom: \"4px\",\n            color: \"rgb(136, 132, 216)\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">count</span>\n          <span className=\"recharts-tooltip-item-separator\"> : </span>\n          <span className=\"recharts-tooltip-item-value\">\n            {props.payload?.reduce(\n              (acc: number, entry: DailyEffortTooltipPayload) =>\n                acc + entry.value,\n              0\n            ) ?? 0}\n          </span>\n        </li>\n      </ul>\n\n      <hr style={{ marginTop: \"0.3em\", marginBottom: \"0.3em\" }} />\n\n      <div>\n        {props.payload &&\n          props.payload\n            .slice()\n            .reverse()\n            .map((entry: DailyEffortTooltipPayload) => {\n              if (entry.value <= 0) return null;\n              return (\n                <div\n                  key={entry.dataKey}\n                  style={{ color: getRatingColorCode(entry.dataKey) }}\n                >\n                  {entry.dataKey === \"Black\" ? \"Other\" : entry.dataKey}\n                  {\" : \"}\n                  {entry.value}\n                </div>\n              );\n            })}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { ratingColors, getRatingColorCode } from \"../../utils/colors\";\n\nimport { CustomTooltip } from \"./CustomTooltip\";\nimport { formatDate } from \"../../utils/formatDate\";\n\ninterface Props {\n  solvedHistory: object[];\n}\n\nconst ClimbingChart: React.FunctionComponent<Props> = (props) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <AreaChart\n        data={props.solvedHistory}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"dateSecond\"\n          domain={[\"dataMin\", \"dataMax\"]}\n          type=\"number\"\n          tickFormatter={(dateSecond: number): string => formatDate(dateSecond)}\n        />\n\n        <YAxis />\n        <Tooltip content={<CustomTooltip label={1} />} />\n\n        {ratingColors.map((ratingColor) => {\n          const colorCode: string = getRatingColorCode(ratingColor);\n          return (\n            <Area\n              type=\"linear\"\n              isAnimationActive={false}\n              key={ratingColor}\n              dataKey={ratingColor === \"Black\" ? \"Other\" : ratingColor}\n              stackId=\"1\"\n              stroke={colorCode}\n              fill={colorCode}\n            />\n          );\n        })}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\ninterface Props {\n  solvedHistory: object[];\n}\n\nconst Climbing: React.FunctionComponent<Props> = (props: Props) => {\n  return (\n    <React.Fragment>\n      <h3>Climbing</h3>\n      <hr />\n      <ClimbingChart solvedHistory={props.solvedHistory} />\n    </React.Fragment>\n  );\n};\n\nexport default Climbing;\n","import React from \"react\";\n\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\nimport { Select } from \"antd\";\nimport { useTheme } from \"../../components/ThemeProvider\";\n\ninterface Props {\n  data: any[];\n}\n\nconst Customtooltip = (x: any) => {\n  return (\n    <React.Fragment>\n      {x.value ? (\n        <div\n          style={{\n            background: \"black\",\n            color: \"white\",\n            padding: \"8px\",\n            borderRadius: \"10px\",\n            textAlign: \"center\",\n          }}\n        >\n          {x.day}\n          <br />\n          {x.value} submissions\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\ninterface CalendarProps {\n  data: any[];\n  year: string;\n}\n\nconst MyResponsiveCalendar = (props: CalendarProps) => {\n  const theme = useTheme();\n\n  return (\n    <ResponsiveCalendar\n      data={props.data}\n      from={props.year + \"-01-01\"}\n      to={props.year + \"-12-31\"}\n      emptyColor=\"#ebedf0\"\n      colors={[\"#C6E48B\", \"#7BC96F\", \"#239A3B\", \"#196127\"]}\n      minValue=\"auto\"\n      theme={{ textColor: theme === \"dark\" ? \"#fff\" : \"#333\" }}\n      margin={{ top: 5, right: 5, bottom: 5, left: 25 }}\n      yearSpacing={45}\n      dayBorderWidth={0.5}\n      dayBorderColor={theme === \"dark\" ? \"#333\" : \"#fff\"}\n      monthBorderWidth={0}\n      tooltip={Customtooltip}\n      legends={[\n        {\n          anchor: \"bottom-right\",\n          direction: \"row\",\n          translateY: 36,\n          itemCount: 4,\n          itemWidth: 42,\n          itemHeight: 36,\n          itemsSpacing: 14,\n          itemDirection: \"right-to-left\",\n        },\n      ]}\n    />\n  );\n};\n\nconst Heatmap: React.FunctionComponent<Props> = (props: Props) => {\n  const yearsSet: Set<string> = new Set();\n  props.data.forEach((x) => {\n    yearsSet.add(x.day.slice(0, 4));\n  });\n\n  let years: string[] = Array.from(yearsSet);\n  years.reverse();\n\n  const [selectYear, setSelectYear] = React.useState(years[0]);\n\n  React.useEffect(() => {}, []);\n\n  return (\n    <React.Fragment>\n      <h3>Heatmap</h3>\n      <hr />\n\n      <div style={{ height: 300, marginBottom: 50 }}>\n        <div style={{ textAlign: \"right\", paddingTop: \"20px\" }}>\n          {years.length > 0 && (\n            <Select\n              defaultValue=\"Choose year\"\n              style={{ width: 150, textAlign: \"left\" }}\n              onChange={(value) => {\n                setSelectYear(value);\n              }}\n            >\n              {years.map((year: string) => (\n                <Select.Option value={year} key={year}>\n                  {year}\n                </Select.Option>\n              ))}\n            </Select>\n          )}\n        </div>\n\n        <MyResponsiveCalendar data={props.data} year={selectYear} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Heatmap;\n","import { getRatingColor } from \"../../utils/colors\";\n\nfunction formatDate(dateSecond: number): string {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd}`;\n}\n\nexport const makeSolvedHistory = (submission: any[]) => {\n  let count = 0;\n  let cntRed = 0;\n  let cntOrange = 0;\n  let cntViolet = 0;\n  let cntBlue = 0;\n  let cntCyan = 0;\n  let cntGreen = 0;\n  let cntGrey = 0;\n  let cntOther = 0;\n\n  let solvedHistory: any[] = [];\n\n  let isSolved = new Map();\n  const revSubmission: any[] = submission.slice().reverse();\n\n  let newRevSubmission = [] as any[];\n  revSubmission.forEach((x) => {\n    if (x.verdict !== \"OK\") {\n      return;\n    }\n\n    const p = x.problem;\n    const problemId = String(p.contestId) + \":\" + String(p.index);\n\n    if (isSolved.get(problemId)) {\n      return;\n    }\n\n    isSolved.set(problemId, true);\n    newRevSubmission.push(x);\n  });\n\n  const numSubmission: number = newRevSubmission.length;\n\n  for (let i = 0; i < numSubmission; i++) {\n    const x = newRevSubmission[i];\n\n    count++;\n\n    const color = getRatingColor(x.problem.rating);\n\n    switch (color) {\n      case \"Red\":\n        cntRed++;\n        break;\n      case \"Orange\":\n        cntOrange++;\n        break;\n      case \"Violet\":\n        cntViolet++;\n        break;\n      case \"Blue\":\n        cntBlue++;\n        break;\n      case \"Cyan\":\n        cntCyan++;\n        break;\n      case \"Green\":\n        cntGreen++;\n        break;\n      case \"Grey\":\n        cntGrey++;\n        break;\n      case \"Black\":\n        cntOther++;\n        break;\n    }\n\n    const dateSecond = x.creationTimeSeconds;\n    if (\n      i !== numSubmission - 1 &&\n      numSubmission > 1 &&\n      formatDate(dateSecond) ===\n        formatDate(newRevSubmission[i + 1].creationTimeSeconds)\n    ) {\n      continue;\n    }\n\n    solvedHistory.push({\n      dateSecond: dateSecond,\n      dateFormat: formatDate(dateSecond),\n      count: count,\n      Red: cntRed,\n      Orange: cntOrange,\n      Violet: cntViolet,\n      Blue: cntBlue,\n      Cyan: cntCyan,\n      Green: cntGreen,\n      Grey: cntGrey,\n      Other: cntOther,\n    });\n  }\n\n  return solvedHistory;\n};\n","function formatDate(dateSecond: number): string {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd}`;\n}\n\nexport const makeSubmissionHistory = (submission: any[]) => {\n  let count = 0;\n  let submissionHistory: any[] = [];\n  const revSubmission: any[] = submission.slice().reverse();\n  const numSubmission = revSubmission.length;\n\n  for (let i = 0; i < numSubmission; i++) {\n    if (\n      i !== numSubmission - 1 &&\n      formatDate(revSubmission[i].creationTimeSeconds) ===\n        formatDate(revSubmission[i + 1].creationTimeSeconds)\n    ) {\n      count++;\n      continue;\n    }\n\n    submissionHistory.push({\n      day: formatDate(revSubmission[i].creationTimeSeconds),\n      value: count + 1,\n    });\n    count = 0;\n  }\n\n  return submissionHistory;\n};\n","import { formatDate } from \"../../utils/formatDate\";\n\nexport const fetchUserSubmission = async (url: string): Promise<any> => {\n  let submission: any[] = [];\n\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      submission = x.result?.map((e: any) => {\n        let obj = {\n          creationTimeSeconds: e.creationTimeSeconds,\n          problem: e.problem,\n          verdict: e.verdict,\n          programmingLanguage: e.programmingLanguage,\n          submissionId: e.id,\n        };\n        return obj;\n      });\n    })\n    .catch((error) => {\n      console.log(\"Error: \", error.message);\n      return [];\n    });\n\n  return submission;\n};\n\nexport const makeAchievementData = (submission: any[]) => {\n  let isSolved = new Map();\n  let isSolvedDay = new Map();\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n\n  let cntSolveLastYear = 0;\n  let cntSolveLastMonth = 0;\n\n  let uniqDaySubmissions: number[] = [];\n  submission.forEach((x) => {\n    if (x.verdict !== \"OK\") {\n      return;\n    }\n    const time = new Date(x.creationTimeSeconds * 1000);\n    const problemId =\n      String(x.problem.contestId) + \":\" + String(x.problem.index);\n\n    if (isSolved.get(problemId) === undefined) {\n      if (month === 1) {\n        if (time.getMonth() === 12 && time.getFullYear() === year - 1) {\n          cntSolveLastMonth++;\n        }\n      } else {\n        if (time.getMonth() === month - 1 && time.getFullYear() === year) {\n          cntSolveLastMonth++;\n        }\n      }\n      if (time.getFullYear() === year - 1) {\n        cntSolveLastYear++;\n      }\n      isSolved.set(problemId, true);\n\n      const formatted = formatDate(time.getTime() / 1000);\n      if (isSolvedDay.get(formatted) === undefined) {\n        isSolvedDay.set(formatted, true);\n        uniqDaySubmissions.push(x.creationTimeSeconds);\n      }\n    }\n  });\n  let cntCurrentStreak = 0;\n  let tmpTime = today;\n  for (let i = 0; i < uniqDaySubmissions.length; i++) {\n    const x = uniqDaySubmissions[i];\n    const e = formatDate(x);\n\n    if (formatDate(tmpTime.getTime() / 1000) === e) {\n      cntCurrentStreak++;\n    } else {\n      break;\n    }\n    tmpTime = new Date(tmpTime.getTime() - 24 * 3600 * 1000);\n  }\n\n  uniqDaySubmissions.reverse();\n\n  let cntLongestStreak = 0;\n  let tmp = 0;\n  for (let i = 0; i < uniqDaySubmissions.length; i++) {\n    if (i === 0) {\n      cntLongestStreak = 1;\n      tmp = 1;\n      continue;\n    }\n    const lastTime: string = formatDate(uniqDaySubmissions[i] - 24 * 3600);\n    const prevTime: string = formatDate(uniqDaySubmissions[i - 1]);\n\n    if (lastTime === prevTime) {\n      tmp++;\n    } else {\n      tmp = 1;\n    }\n    cntLongestStreak = Math.max(cntLongestStreak, tmp);\n  }\n\n  return {\n    submission: submission,\n    solvedCountAll: isSolved.size,\n    solvedCountLastYear: cntSolveLastYear,\n    solvedCountLastMonth: cntSolveLastMonth,\n    longestStreak: cntLongestStreak,\n    currentStreak: cntCurrentStreak,\n    streakSum: isSolvedDay.size,\n  };\n};\n","import React from \"react\";\nimport Header from \"../..//components/Header/Header\";\nimport UserNotFound from \"./UserNotFound\";\nimport ErrorMessage from \"../TablePage/ErrorMessage\";\nimport Loading from \"./Loading\";\nimport UserNameLabel from \"./UserNameLabel\";\nimport Achievement from \"./Achievement\";\nimport SubmissionListTable from \"./SubmissionListTable\";\nimport Climbing from \"./Climbing\";\nimport Heatmap from \"./Heatmap\";\n\nimport { makeSolvedHistory } from \"./makeSolvedHistory\";\nimport { makeSubmissionHistory } from \"./makeSubmissionHistory\";\nimport { fetchUserSubmission, makeAchievementData } from \"./userUtils\";\nimport { cachedUserInfo } from \"../../utils/TypedCachedApiClient\";\n\ninterface Props {\n  userId: string;\n}\n\nconst User: React.FunctionComponent<Props> = (props: Props) => {\n  const [isError, setIsError] = React.useState(false);\n  const [isUserExist, setIsUserExist] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [userRating, setUserRating] = React.useState(0);\n  const [userSubmission, setUserSubmission] = React.useState([] as any[]);\n  const [userInfo, setUserInfo] = React.useState({\n    solvedCountAll: 0,\n    solvedCountLastYear: 0,\n    solvedCountLastMonth: 0,\n    longestStreak: 0,\n    currentStreak: 0,\n    streakSum: 0,\n    solvedHistory: [] as any[],\n    submissionHistory: [] as any[],\n  });\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    let isMounted = true;\n\n    const getUserInfo = async (userId: string) => {\n      const str = \"https://codeforces.com/api/user.status?handle=\";\n      const userInfo = await cachedUserInfo(props.userId);\n\n      if (userInfo.isUserExist && userInfo.isError === false) {\n        const submissions = await fetchUserSubmission(str + userId);\n        const res = makeAchievementData(submissions);\n        if (isMounted) {\n          setIsLoading(false);\n          setUserSubmission(submissions);\n          setUserInfo({\n            solvedCountAll: res.solvedCountAll,\n            solvedCountLastYear: res.solvedCountLastYear,\n            solvedCountLastMonth: res.solvedCountLastMonth,\n            longestStreak: res.longestStreak,\n            currentStreak: res.currentStreak,\n            streakSum: res.streakSum,\n            solvedHistory: makeSolvedHistory(submissions),\n            submissionHistory: makeSubmissionHistory(submissions),\n          });\n          setIsUserExist(userInfo.isUserExist);\n          setUserRating(userInfo.userRating);\n        }\n      } else {\n        if (isMounted) {\n          setIsLoading(false);\n          setIsError(userInfo.isError);\n          setIsUserExist(userInfo.isUserExist);\n        }\n      }\n    };\n\n    void getUserInfo(props.userId);\n\n    return () => {\n      isMounted = false;\n    };\n  }, [props.userId]);\n\n  const element =\n    isUserExist && isError === false ? (\n      <>\n        <UserNameLabel userId={props.userId} rating={userRating} />\n        <hr />\n        <Achievement\n          userId={props.userId}\n          solvedCountAll={userInfo.solvedCountAll}\n          solvedCountLastYear={userInfo.solvedCountLastYear}\n          solvedCountLastMonth={userInfo.solvedCountLastMonth}\n          longestStreak={userInfo.longestStreak}\n          currentStreak={userInfo.currentStreak}\n          streakSum={userInfo.streakSum}\n        />\n        <Climbing solvedHistory={userInfo.solvedHistory} />\n        <Heatmap data={userInfo.submissionHistory} />\n        <SubmissionListTable submission={userSubmission} />\n      </>\n    ) : isError ? (\n      <ErrorMessage />\n    ) : (\n      <UserNotFound />\n    );\n  const a = isLoading ? <Loading /> : element;\n\n  return (\n    <>\n      <Header userId={props.userId} location=\"user\" />\n      <div className=\"Main\">{a}</div>\n    </>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport ThemeProvider from \"./components/ThemeProvider\";\nimport TablePage from \"./pages/TablePage/index\";\nimport User from \"./pages/UserPage/index\";\n\nconst App: React.FunctionComponent = () => (\n  <ThemeProvider>\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route\n            path=\"/table/:userIds([a-zA-Z0-9_.-]*)\"\n            render={({ match }): React.ReactElement => {\n              // @ts-ignore\n              const params: { userIds?: string } = match.params;\n              const userId: string = params.userIds ?? \"\";\n              return <TablePage userId={userId} />;\n            }}\n          />\n          <Route\n            path=\"/user/:userIds([a-zA-Z0-9_.-]*)\"\n            render={({ match }): React.ReactElement => {\n              // @ts-ignore\n              const params: { userIds?: string } = match.params;\n              const userId: string = params.userIds ?? \"\";\n              return <User userId={userId} />;\n            }}\n          />\n\n          {/*Default Path*/}\n          <Redirect path=\"/\" to=\"/table/\" />\n        </Switch>\n      </div>\n    </HashRouter>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style/index.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}