{"version":3,"sources":["reportWebVitals.ts","utils/localStorage.ts","components/ThemeProvider.tsx","components/Header/Hamburger.tsx","components/Header/Logo.tsx","components/Header/ThemeToggler.tsx","components/Header/Header.tsx","components/TopcoderLikeCircle.tsx","utils/TypedCachedApiClient.ts","components/DifficultyCircle.tsx","utils/colors.ts","pages/TablePage/contestTableUtils.tsx","pages/TablePage/ContestTable.tsx","pages/TablePage/TableTab.tsx","pages/TablePage/index.tsx","pages/UserPage/UserNotFound.tsx","pages/UserPage/Loading.tsx","pages/UserPage/UserNameLabel.tsx","pages/UserPage/Achievement.tsx","utils/formatDate.ts","pages/UserPage/SubmissionListTable.tsx","pages/UserPage/CustomTooltip.tsx","pages/UserPage/Climbing.tsx","pages/UserPage/Heatmap.tsx","pages/UserPage/makeSolvedHistory.ts","pages/UserPage/makeSubmissionHistory.ts","pages/UserPage/userUtils.ts","pages/UserPage/index.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useLocalStorage","key","defaultValue","a","localStorage","getItem","React","useState","JSON","parse","value","setValue","useEffect","setItem","stringify","ThemeContext","createContext","Error","ThemeProvider","props","themeId","setThemeId","Provider","Helmet","className","children","Hamburger","id","MenuOutlined","Logo","to","alt","src","ThemeToggler","useContext","theme","useTheme","defaultChecked","onChange","icons","checked","unchecked","colProps","xxl","xl","lg","md","sm","xs","Header","userId","setUserId","isOpen","setIsOpen","handleChange","e","currentTarget","history","useHistory","handleEnter","push","location","collapseId","style","flexFlow","height","display","placeholder","onPressEnter","replace","disabled","onClick","isOpened","TopcoderLikeCircle","difficulty","color","undefined","rating","colorCode","getColorCode","fillRatio","calcFillRatio","metalOption","base","highlight","styles","borderColor","background","borderStyle","big","defaultProps","CACHED_CONTESTS","CACHED_PROBLEMS","DifficultyCircle","title","String","ratingColors","getRatingColorCode","getRatingColor","getRatingColorClass","makeColumns","n","res","dataIndex","render","text","i","alp","fromCharCode","PREFIX","STATIC_API_BASE_URL","fetchContests","url","tmp","fetch","json","x","result","filter","obj","phase","cachedContestArray","t","console","log","fetchProblems","Map","array","problems","mp","reverse","forEach","element","contestId","has","prevArray","get","set","cachedProblemMap","fetchUserSubmissions","verdict","catch","error","message","newMap","problem","index","noCachedUserSubmissions","fetchUserInfo","currentRating","isUserExist","status","userRating","CACHED_USER_INFO","cachedUserInfo","ContestTable","problemData2","acList","setAcList","problemDataFromLocal","contestDataFromLocal","contestData","setContestData","problemData","setProblemData","f","isLoading","setIsLoading","isMounted","Promise","all","userSubmission","getUserSubmissions","contests","Array","from","entries","getUniversalInfo","size","filteredContestData","isShowDifficulty","map","problemList","isOk","cnt","href","rel","target","name","ratingColorClass","makeContestTable","contestName","substr","includes","filterContest","columns","contest","columnNum","makeContestColumns","loading","pagination","defaultPageSize","pageSizeOptions","bordered","dataSource","locale","emptyText","Fragment","TableTabButtons","setContest","setIsShowDifficulty","Group","Button","TablePage","TableTab","UserNotFound","type","Loading","UserNameLabel","c","userRatingCircle","badge","count","backgroundColor","Achievement","gutter","solvedCountAll","solvedCountLastYear","solvedCountLastMonth","longestStreak","currentStreak","streakSum","formatFullDate","dateSecond","date","Date","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","hh","getHours","min","getMinutes","sec","getSeconds","formatDate","SubmissionListTable","submission","submissionSecond","creationTimeSeconds","difficultyCircle","problemIndex","submissionUrl","submissionId","problemUrl","programmingLanguage","detail","CustomTooltip","active","payload","label","margin","padding","border","whiteSpace","paddingTop","paddingBottom","reduce","acc","entry","marginTop","marginBottom","slice","dataKey","ClimbingChart","ResponsiveContainer","width","AreaChart","data","solvedHistory","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","domain","tickFormatter","YAxis","Tooltip","content","ratingColor","Area","stackId","stroke","fill","Climbing","Customtooltip","borderRadius","textAlign","day","MyResponsiveCalendar","year","emptyColor","colors","minValue","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","tooltip","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","Heatmap","yearsSet","Set","add","years","selectYear","setSelectYear","length","Option","makeSolvedHistory","cntRed","cntOrange","cntViolet","cntBlue","cntCyan","cntGreen","cntGrey","cntOther","isSolved","revSubmission","newRevSubmission","p","problemId","numSubmission","dateFormat","Red","Orange","Violet","Blue","Cyan","Green","Grey","Other","makeSubmissionHistory","submissionHistory","fetchUserSubmission","makeAchievementData","isSolvedDay","today","month","cntSolveLastYear","cntSolveLastMonth","uniqDaySubmissions","time","formatted","getTime","cntCurrentStreak","tmpTime","cntLongestStreak","Math","max","User","setIsUserExist","setUserRating","setUserSubmission","userInfo","setUserInfo","str","submissions","getUserInfo","App","path","params","match","userIds","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eaecd6a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport const useLocalStorage = <T>(key: string, defaultValue: T) => {\n  const a = localStorage.getItem(key);\n  const [value, setValue] = React.useState(a ? JSON.parse(a) : defaultValue);\n\n  React.useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocalStorage } from \"../utils/localStorage\";\n\ntype ThemeId = \"light\" | \"dark\" | \"purple\";\ntype ThemeContextProps = [ThemeId, (newThemeId: ThemeId) => void];\n\nexport const ThemeContext = React.createContext<ThemeContextProps>([\n  \"light\",\n  (): void => {\n    throw new Error(\"setThemeId is not implemented.\");\n  },\n]);\n\ninterface ThemeProviderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = (\n  props: ThemeProviderProps\n) => {\n  const [themeId, setThemeId] = useLocalStorage<string>(\"theme\", \"light\");\n\n  return (\n    <ThemeContext.Provider value={[themeId, setThemeId]}>\n      <Helmet>\n        <html className={`theme-${themeId}`} />\n      </Helmet>\n\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const [themeId] = React.useContext(ThemeContext);\n\n  return themeId;\n};\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport { MenuOutlined } from \"@ant-design/icons\";\n\nimport \"./Hamburger.css\";\n\nconst Hamburger: React.FunctionComponent = (props) => {\n  return (\n    <div id=\"hamburger-btn\">\n      <MenuOutlined />\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React from \"react\";\nimport \"./Logo.css\";\n\nimport { Link } from \"react-router-dom\";\n\n// src={process.env.PUBLIC_URL + \"my_logo.png\"\n// src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\"\nconst Logo: React.FunctionComponent = (props) => {\n  return (\n    <h1 id=\"logo\">\n      <Link to=\"/table\">\n        <img alt=\"logo\" src=\"../CF-like-logo.png\" />\n        CF Problems{\" \"}\n      </Link>\n    </h1>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nimport Toggle from \"react-toggle\";\n\nimport \"react-toggle/style.css\";\nimport \"./ThemeToggler.css\";\n\nimport { ThemeContext, useTheme } from \"../ThemeProvider\";\n\nconst ThemeToggler = () => {\n  const [, setThemeId] = React.useContext(ThemeContext);\n  const theme = useTheme();\n\n  return (\n    <>\n      <div className=\"theme-toggler\">\n        <Toggle\n          defaultChecked={theme === \"dark\"}\n          onChange={() => {\n            setThemeId(theme === \"light\" ? \"dark\" : \"light\");\n          }}\n          icons={{\n            checked: <span className=\"toggle-icon\">🌜</span>,\n            unchecked: <span className=\"toggle-icon\">🌞</span>,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThemeToggler;\n","import React from \"react\";\nimport Hamburger from \"./Hamburger\";\nimport Logo from \"./Logo\";\nimport ThemeToggler from \"./ThemeToggler\";\nimport { Row, Col } from \"antd\";\nimport { Input, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { Collapse } from \"react-collapse\";\n\nimport \"./Header.css\";\nimport \"./InputBox.css\";\n\nconst colProps = [\n  {\n    xxl: 4,\n    xl: 5,\n    lg: 6,\n    md: 6,\n    sm: 8,\n    xs: 20,\n  },\n  {\n    xxl: 20,\n    xl: 19,\n    lg: 18,\n    md: 18,\n    sm: 16,\n    xs: 0,\n  },\n  {\n    xxl: 0,\n    xl: 0,\n    lg: 0,\n    md: 0,\n    sm: 0,\n    xs: 4,\n  },\n];\n\ninterface Props {\n  userId: string | undefined;\n  location: string;\n}\n\nconst Header: React.FunctionComponent<Props> = (props: Props) => {\n  const [userId, setUserId] = React.useState(props.userId);\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setUserId(e.currentTarget.value);\n  };\n\n  let history = useHistory();\n\n  const handleEnter = (e: React.FormEvent<HTMLInputElement>) => {\n    history.push(\"/\" + props.location + \"/\" + userId);\n  };\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  let collapseId: string = isOpen\n    ? \"collapse-isOpen-true\"\n    : \"collapse-isOpen-false\";\n\n  return (\n    <div id=\"header\">\n      <Row style={{ flexFlow: \"nowrap\", height: 56 }}>\n        <Col {...colProps[0]}>\n          <Logo />\n        </Col>\n        <Col {...colProps[1]} className=\"menu-row\" style={{ display: \"flex\" }}>\n          <div id=\"input-box\">\n            <Input\n              placeholder=\"Codeforces ID\"\n              value={userId}\n              onChange={handleChange}\n              onPressEnter={handleEnter}\n            />\n            <Button>\n              <Link to={\"/table/\" + userId} replace>Table</Link>\n            </Button>\n            {userId === \"\" ? (\n              <Button disabled>\n                <Link to={\"/user/\" + userId} replace >User</Link>\n              </Button>\n            ) : (\n              <Button>\n                <Link to={\"/user/\" + userId} replace>User</Link>\n              </Button>\n            )}\n          </div>\n          <ThemeToggler />\n        </Col>\n        <Col {...colProps[2]}>\n          <div onClick={() => toggleIsOpen()}>\n            <Hamburger />\n          </div>\n        </Col>\n      </Row>\n      <Collapse isOpened={isOpen}>\n        <div className={collapseId}>\n          <div id=\"input-box\">\n            <Input\n              placeholder=\"Codeforces ID\"\n              value={userId}\n              onChange={handleChange}\n              onPressEnter={handleEnter}\n            />\n            <Button>\n              <Link to={\"/table/\" + userId} replace>Table</Link>\n            </Button>\n            {userId === \"\" ? (\n              <Button disabled>\n                <Link to={\"/user/\" + userId} replace>User</Link>\n              </Button>\n            ) : (\n              <Button>\n                <Link to={\"/user/\" + userId} replace>User</Link>\n              </Button>\n            )}\n          </div>\n          <ThemeToggler />\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction getColor(difficulty: number | undefined): string {\n  let color: string;\n\n  if (difficulty === undefined) {\n    color = \"black\";\n  } else if (difficulty < 1200) {\n    color = \"grey\";\n  } else if (difficulty < 1400) {\n    color = \"green\";\n  } else if (difficulty < 1600) {\n    color = \"cyan\";\n  } else if (difficulty < 1900) {\n    color = \"blue\";\n  } else if (difficulty < 2100) {\n    color = \"violet\";\n  } else if (difficulty < 2400) {\n    color = \"orange\";\n  } else if (difficulty < 2600) {\n    color = \"red\";\n  } else if (difficulty < 2900) {\n    color = \"bronze\";\n  } else if (difficulty < 3200) {\n    color = \"silver\";\n  } else {\n    color = \"gold\";\n  }\n\n  return color;\n}\n\nfunction getColorCode(difficulty: number): string {\n  let color: string;\n\n  if (difficulty < 1200) {\n    color = \"#808080\";\n  } else if (difficulty < 1400) {\n    color = \"#008000\";\n  } else if (difficulty < 1600) {\n    color = \"#03A89E\";\n  } else if (difficulty < 1900) {\n    color = \"#0000FF\";\n  } else if (difficulty < 2100) {\n    color = \"#AA00AA\";\n  } else if (difficulty < 2400) {\n    color = \"#FF8C00\";\n  } else if (difficulty < 2600) {\n    color = \"#FF0000\";\n  } else if (difficulty < 2900) {\n    color = \"#965C2C\";\n  } else if (difficulty < 3200) {\n    color = \"#808080\";\n  } else {\n    color = \"#FFD700\";\n  }\n\n  return color;\n}\n\nfunction calcFillRatio(difficulty: number): number {\n  let fillRatio: number = 0;\n\n  if (difficulty < 1200) {\n    fillRatio = difficulty / 1200;\n  } else if (difficulty < 1400) {\n    fillRatio = 1 - (1400 - difficulty) / 200;\n  } else if (difficulty < 1600) {\n    fillRatio = 1 - (1600 - difficulty) / 200;\n  } else if (difficulty < 1900) {\n    fillRatio = 1 - (1900 - difficulty) / 300;\n  } else if (difficulty < 2100) {\n    fillRatio = 1 - (2100 - difficulty) / 200;\n  } else if (difficulty < 2400) {\n    fillRatio = 1 - (2400 - difficulty) / 300;\n  } else if (difficulty < 2600) {\n    fillRatio = 1 - (2600 - difficulty) / 200;\n  } else {\n    fillRatio = 1.0;\n  }\n\n  return fillRatio;\n}\n\ninterface Props {\n  rating: number;\n  // optional props\n  big?: boolean;\n}\n\nconst TopcoderLikeCircle: React.FunctionComponent<Props> = (props) => {\n  const color = getColor(props.rating);\n\n  const colorCode = getColorCode(props.rating);\n  const fillRatio = calcFillRatio(props.rating);\n\n  const isMetal = color === \"bronze\" || color === \"silver\" || color === \"gold\";\n\n  let metalOption = {\n    base: \"\",\n    highlight: \"\",\n  };\n  if (color === \"bronze\") {\n    metalOption = { base: \"#965C2C\", highlight: \"#FFDABD\" };\n  }\n  if (color === \"silver\") {\n    metalOption = { base: \"#808080\", highlight: \"white\" };\n  }\n  if (color === \"gold\") {\n    metalOption = { base: \"#FFD700\", highlight: \"white\" };\n  }\n\n  const styles = isMetal\n    ? {\n        borderColor: colorCode,\n        background: `linear-gradient(to right, \\\n        ${metalOption.base}, ${metalOption.highlight}, ${metalOption.base}`,\n        color: colorCode,\n      }\n    : {\n        borderColor: colorCode,\n        borderStyle: \"solid\",\n        background: `linear-gradient(to top, \\\n        ${colorCode} 0%, \\\n        ${colorCode} ${fillRatio * 100}%, \\\n        rgba(0,0,0,0) ${fillRatio * 100}%, \\\n        rgba(0,0,0,0) 100%)`,\n        color: colorCode,\n      };\n  return (\n    <span\n      className={\n        props.big ? \"big-difficulty-circle\" : \"common-difficulty-circle\"\n      }\n      style={styles}\n    ></span>\n  );\n};\n\n// default Props\nTopcoderLikeCircle.defaultProps = {\n  big: false,\n};\n\nexport default TopcoderLikeCircle;\n","const STATIC_API_BASE_URL = \"https://codeforces.com/api\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst fetchContests = async (url: string): Promise<any> => {\n  let tmp: any = [];\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      tmp = x.result.filter((obj: any) => {\n        return obj.phase === \"FINISHED\";\n      });\n    });\n\n  return tmp;\n};\n\nlet CACHED_CONTESTS: any[];\nexport const cachedContestArray = async (): Promise<any[]> => {\n  if (CACHED_CONTESTS === undefined) {\n    try {\n      let t = await fetchContests(STATIC_API_BASE_URL + \"/contest.list\");\n      CACHED_CONTESTS = t;\n    } catch (e) {\n      console.log(e);\n      CACHED_CONTESTS = [];\n    }\n  }\n  return CACHED_CONTESTS;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst fetchProblems = async (url: string): Promise<any> => {\n  let tmp = new Map();\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      let array = x.result.problems;\n      let mp = new Map();\n      array.reverse().forEach((element: any) => {\n        const contestId = element.contestId;\n        if (mp.has(contestId)) {\n          const prevArray = mp.get(contestId);\n          mp.set(contestId, [...prevArray, element]);\n        } else {\n          mp.set(contestId, [element]);\n        }\n      });\n      tmp = mp;\n    });\n  return tmp;\n};\n\nlet CACHED_PROBLEMS: any;\nexport const cachedProblemMap = async (): Promise<any> => {\n  if (CACHED_PROBLEMS === undefined) {\n    try {\n      CACHED_PROBLEMS = await fetchProblems(\n        STATIC_API_BASE_URL + \"/problemset.problems\"\n      );\n    } catch (e) {\n      console.log(e);\n      CACHED_PROBLEMS = new Map();\n    }\n  }\n  return CACHED_PROBLEMS;\n};\n\nconst fetchUserSubmissions = async (url: string): Promise<any> => {\n  let tmp: any = [];\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      tmp = x.result.filter((x: any) => x.verdict === \"OK\");\n    })\n    .catch((error) => {\n      console.log(\"Error: \", error.message);\n      return;\n    });\n\n  let newMap: Map<string, boolean> = new Map();\n  tmp.forEach((x: any) => {\n    let t = String(x.problem.contestId) + x.problem.index;\n    newMap.set(t, true);\n  });\n\n  return newMap;\n};\n\nexport const noCachedUserSubmissions = async (url: string): Promise<any> => {\n  let res;\n  try {\n    res = await fetchUserSubmissions(url);\n  } catch (e) {\n    console.log(e);\n    res = new Map();\n  }\n  return res;\n};\n\nconst fetchUserInfo = async (url: string): Promise<any> => {\n  let currentRating: number = 0;\n  let isUserExist: boolean = true;\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      if (x.status !== \"OK\") {\n        isUserExist = false;\n      }\n      currentRating = x.result[0].rating;\n    })\n    .catch((error) => {\n      console.log(\"Error: \", error.message);\n      return;\n    });\n\n  return {\n    isUserExist: isUserExist,\n    userRating: currentRating,\n  };\n};\n\nlet CACHED_USER_INFO: Map<string, any> = new Map();\nexport const cachedUserInfo = async (userId: string): Promise<any> => {\n  if (CACHED_USER_INFO.get(userId) === undefined) {\n    try {\n      CACHED_USER_INFO.set(\n        userId,\n        await fetchUserInfo(\n          STATIC_API_BASE_URL + \"/user.info?handles=\" + userId\n        )\n      );\n    } catch (e) {\n      console.log(e);\n      CACHED_PROBLEMS = new Map();\n    }\n  }\n  return CACHED_USER_INFO.get(userId);\n};\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\nimport TopcoderLikeCircle from \"./TopcoderLikeCircle\";\n\ninterface Props {\n  rating: number | undefined;\n}\n\nconst DifficultyCircle: React.FunctionComponent<Props> = (props) => {\n  if (props.rating === undefined) {\n    return (\n      <Tooltip title=\"Difficulty is unavailable.\" color=\"black\">\n        <div className=\"difficulty-unavailable-circle\">\n          <span className=\"common-difficulty-circle\"></span>\n        </div>\n      </Tooltip>\n    );\n  }\n  return (\n    <Tooltip title={\"Difficulty :\" + String(props.rating)} color=\"black\">\n      <div className=\"div-diff-circle\">\n        <TopcoderLikeCircle rating={props.rating} />\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default DifficultyCircle;\n","export type RatingColor =\n  | \"Black\"\n  | \"Grey\"\n  | \"Green\"\n  | \"Cyan\"\n  | \"Blue\"\n  | \"Violet\"\n  | \"Orange\"\n  | \"Red\";\n\nexport const ratingColors: RatingColor[] = [\n  \"Red\",\n  \"Orange\",\n  \"Violet\",\n  \"Blue\",\n  \"Cyan\",\n  \"Green\",\n  \"Grey\",\n  \"Black\",\n];\n\nexport const getRatingColorCode = (color: RatingColor): string => {\n  switch (color) {\n    case \"Black\":\n      return \"#000000\";\n    case \"Grey\":\n      return \"#808080\";\n    case \"Green\":\n      return \"#008000\";\n    case \"Cyan\":\n      return \"#03A89E\";\n    case \"Blue\":\n      return \"#0000FF\";\n    case \"Violet\":\n      return \"#AA00AA\";\n    case \"Orange\":\n      return \"#FF8C00\";\n    case \"Red\":\n      return \"#FF0000\";\n  }\n};\n\nexport const getRatingColor = (rating: number | undefined): RatingColor => {\n  let ratingColor: RatingColor;\n\n  if (rating === undefined) {\n    ratingColor = \"Black\";\n  } else if (rating < 1200) {\n    ratingColor = \"Grey\";\n  } else if (rating < 1400) {\n    ratingColor = \"Green\";\n  } else if (rating < 1600) {\n    ratingColor = \"Cyan\";\n  } else if (rating < 1900) {\n    ratingColor = \"Blue\";\n  } else if (rating < 2100) {\n    ratingColor = \"Violet\";\n  } else if (rating < 2400) {\n    ratingColor = \"Orange\";\n  } else {\n    ratingColor = \"Red\";\n  }\n\n  return ratingColor;\n};\n\nexport type RatingColorClassName =\n  | \"difficulty-black\"\n  | \"difficulty-grey\"\n  | \"difficulty-green\"\n  | \"difficulty-cyan\"\n  | \"difficulty-blue\"\n  | \"difficulty-violet\"\n  | \"difficulty-orange\"\n  | \"difficulty-red\";\n\nexport const getRatingColorClass = (\n  rating: number | undefined\n): RatingColorClassName => {\n  const ratingColor: RatingColor = getRatingColor(rating);\n  switch (ratingColor) {\n    case \"Black\":\n      return \"difficulty-black\";\n    case \"Grey\":\n      return \"difficulty-grey\";\n    case \"Green\":\n      return \"difficulty-green\";\n    case \"Cyan\":\n      return \"difficulty-cyan\";\n    case \"Blue\":\n      return \"difficulty-blue\";\n    case \"Violet\":\n      return \"difficulty-violet\";\n    case \"Orange\":\n      return \"difficulty-orange\";\n    case \"Red\":\n      return \"difficulty-red\";\n  }\n};\n","import React from \"react\";\nimport DifficultyCircle from \"../../components/DifficultyCircle\";\n\nimport { getRatingColorClass } from \"../../utils/colors\";\n\nexport const makeColumns = (n: number) => {\n  let res = [\n    {\n      title: \"Contest\",\n      dataIndex: \"name\",\n      render: (text: string) => text,\n    },\n  ];\n  for (let i = 0; i < n; i++) {\n    const alp: string = String.fromCharCode(65 + i);\n    res.push({\n      title: alp,\n      dataIndex: alp,\n      render: (text: string) => text,\n    });\n  }\n  return res;\n};\n\nexport const makeContestColumns = (contest: string) => {\n  let columnNum: number = 9;\n\n  switch (contest) {\n    case \"Educational Codeforces Rounds\":\n      columnNum = 9;\n      break;\n    case \"Codeforces Global Rounds\":\n      columnNum = 9;\n      break;\n    case \"Div. 1 Contests\":\n      columnNum = 8;\n      break;\n    case \"Div. 2 Contests\":\n      columnNum = 8;\n      break;\n    case \"Div. 3 Contests\":\n      columnNum = 8;\n      break;\n    case \"Div. 4 Contests\":\n      columnNum = 7;\n      break;\n    case \"Q#\":\n      columnNum = 9;\n      break;\n    case \"All Contests\":\n      columnNum = 18;\n      break;\n  }\n\n  let columns = makeColumns(columnNum);\n\n  if (contest === \"Microsoft Q# Coding Contests\") {\n    columns = [\n      ...makeColumns(9),\n      {\n        title: \"U\",\n        dataIndex: \"U\",\n        render: (text: string) => text,\n      },\n    ];\n  }\n  return columns;\n};\n\nexport const filterContest = (\n  contestName: string,\n  contestData: object[]\n): object[] => {\n  let filteredContestData;\n\n  if (contestName === \"All Contests\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return true;\n    });\n  }\n\n  if (contestName === \"Educational Codeforces Rounds\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return obj.name.substr(0, 11) === \"Educational\";\n    });\n  }\n\n  if (contestName === \"Codeforces Global Rounds\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return obj.name.includes(\"Codeforces Global Round\");\n    });\n  }\n\n  if (contestName === \"Div. 1 Contests\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return obj.name.includes(\"Div. 1\") && !obj.name.includes(\"Bubble Cup\");\n    });\n  }\n\n  if (contestName === \"Div. 2 Contests\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return (\n        obj.name.includes(\"Div. 2\") &&\n        !obj.name.includes(\"Educational\") &&\n        !obj.name.includes(\"Bubble Cup\")\n      );\n    });\n  }\n\n  if (contestName === \"Div. 3 Contests\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return obj.name.includes(\"Div. 3\");\n    });\n  }\n\n  if (contestName === \"Div. 4 Contests\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return obj.name.includes(\"Div. 4\");\n    });\n  }\n\n  if (contestName === \"Microsoft Q# Coding Contests\") {\n    filteredContestData = contestData!.filter((obj: any) => {\n      return obj.name.includes(\"Q#\");\n    });\n  }\n\n  if (filteredContestData !== undefined) {\n    return filteredContestData;\n  } else {\n    return [];\n  }\n};\n\nconst PREFIX = \"https://codeforces.com/contest/\";\nexport const makeContestTable = (\n  filteredContestData: any[],\n  problemData: Map<number, any[]>,\n  isShowDifficulty: boolean,\n  acList: Map<string, boolean>\n) => {\n  return filteredContestData.map((x: any) => {\n    let obj: any = {};\n\n    const contestId = x.id;\n    let problemList = problemData.get(contestId);\n\n    let tmp: Map<string, number> = new Map();\n    let isOk: boolean = true;\n\n    problemList!.forEach((e: any) => {\n      const t = acList!.get(String(x.id) + String(e.index));\n      isOk = isOk && (t === undefined ? false : true);\n\n      let cnt = tmp.get(e.index[0]);\n      if (cnt === undefined) {\n        cnt = 1;\n      } else {\n        cnt++;\n      }\n      tmp.set(e.index[0], cnt);\n    });\n\n    obj[\"name\"] = (\n      <>\n        {isOk ? (\n          <div className=\"table-success-1 cell-element\">\n            <a\n              href={PREFIX + String(x.id)}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {x.name}\n            </a>\n          </div>\n        ) : (\n          <div className=\"cell-element\">\n            <a\n              href={PREFIX + String(x.id)}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {x.name}\n            </a>\n          </div>\n        )}\n      </>\n    );\n\n    problemList!.forEach((e: any) => {\n      const className = acList!.get(String(x.id) + String(e.index))\n        ? \"table-success-\" + tmp.get(e.index[0])\n        : \"table-not-success-\" + tmp.get(e.index[0]);\n      const ratingColorClass = isShowDifficulty\n        ? getRatingColorClass(e.rating)\n        : \"difficulty-black\";\n\n      obj[e.index[0]] = (\n        <>\n          {obj[e.index[0]] !== undefined ? (\n            <>\n              {obj[e.index[0]]}\n              <div className={className}>\n                <div className=\"cell-element\">\n                  {isShowDifficulty && <DifficultyCircle rating={e.rating} />}\n                  <a\n                    href={PREFIX + String(x.id) + \"/problem/\" + e.index}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    className={ratingColorClass}\n                  >\n                    {String(e.index) + \". \" + e.name}\n                  </a>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className={className}>\n              <div className=\"cell-element\">\n                {isShowDifficulty && <DifficultyCircle rating={e.rating} />}\n                <a\n                  href={PREFIX + String(x.id) + \"/problem/\" + e.index}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  className={ratingColorClass}\n                >\n                  {String(e.index) + \". \" + e.name}\n                </a>\n              </div>\n            </div>\n          )}\n        </>\n      );\n    });\n\n    obj[\"key\"] = contestId;\n    obj[\"id\"] = contestId;\n\n    obj[\"name\"] = <div className=\"box\">{obj[\"name\"]}</div>;\n    obj[\"A\"] = <div className=\"box\">{obj[\"A\"]}</div>;\n    obj[\"B\"] = <div className=\"box\">{obj[\"B\"]}</div>;\n    obj[\"C\"] = <div className=\"box\">{obj[\"C\"]}</div>;\n    obj[\"D\"] = <div className=\"box\">{obj[\"D\"]}</div>;\n    obj[\"E\"] = <div className=\"box\">{obj[\"E\"]}</div>;\n    obj[\"F\"] = <div className=\"box\">{obj[\"F\"]}</div>;\n    obj[\"G\"] = <div className=\"box\">{obj[\"G\"]}</div>;\n    obj[\"H\"] = <div className=\"box\">{obj[\"H\"]}</div>;\n    obj[\"I\"] = <div className=\"box\">{obj[\"I\"]}</div>;\n\n    return obj;\n  });\n};\n","import React from \"react\";\nimport { Table } from \"antd\";\n\nimport {\n  makeContestColumns,\n  filterContest,\n  makeContestTable,\n} from \"./contestTableUtils\";\n\nimport {\n  cachedContestArray,\n  cachedProblemMap,\n  noCachedUserSubmissions,\n} from \"../../utils/TypedCachedApiClient\";\n\ninterface ContestTableProps {\n  name: string;\n  isShowDifficulty: boolean;\n  userId: string | undefined;\n}\n\nconst ContestTable: React.FC<ContestTableProps> = (props) => {\n  const [acList, setAcList] = React.useState(new Map());\n\n  const problemDataFromLocal = localStorage.getItem(\"problemData\");\n  const contestDataFromLocal = localStorage.getItem(\"contestData\");\n\n  const [contestData, setContestData] = React.useState(\n    contestDataFromLocal === undefined || contestDataFromLocal === null\n      ? ([] as any[])\n      : JSON.parse(contestDataFromLocal)\n  );\n\n  const [problemData, setProblemData] = React.useState(\n    problemDataFromLocal === undefined || problemDataFromLocal === null\n      ? new Map()\n      : new Map(JSON.parse(problemDataFromLocal))\n  );\n\n  const f =\n    problemDataFromLocal !== undefined &&\n    problemDataFromLocal !== null &&\n    contestDataFromLocal !== undefined &&\n    contestDataFromLocal !== null;\n\n  const [isLoading, setIsLoading] = React.useState(!f);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    if (props.userId === undefined || props.userId === \"\") {\n      if (isMounted) {\n        setAcList(new Map());\n      }\n      return;\n    }\n\n    const str = \"https://codeforces.com/api/user.status?handle=\";\n\n    const getUserSubmissions = async () => {\n      const [userSubmission] = await Promise.all([\n        noCachedUserSubmissions(str + props.userId),\n      ]);\n      if (isMounted) {\n        setAcList(userSubmission);\n      }\n    };\n\n    void getUserSubmissions();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [props.userId]);\n\n  React.useEffect(() => {\n    let isMounted = true;\n\n    const getUniversalInfo = async () => {\n      const [contests, mp] = await Promise.all([\n        cachedContestArray(),\n        cachedProblemMap(),\n      ]);\n\n      if (isMounted) {\n        setContestData(contests);\n        setProblemData(mp);\n        localStorage.setItem(\n          \"problemData\",\n          JSON.stringify(Array.from(mp.entries()))\n        );\n        localStorage.setItem(\"contestData\", JSON.stringify(contests));\n        setIsLoading(false);\n      }\n    };\n\n    void getUniversalInfo();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  let problemData2;\n  if (problemData.size !== 0 && problemData.size !== undefined) {\n    let filteredContestData: object[] = contestData!.filter((obj: any) => {\n      const id = obj.id;\n      return problemData.has(id);\n    });\n\n    filteredContestData = filterContest(props.name, filteredContestData);\n\n    problemData2 = makeContestTable(\n      filteredContestData,\n      problemData,\n      props.isShowDifficulty,\n      acList\n    );\n  }\n\n  const columns = makeContestColumns(props.name);\n\n  return (\n    <>\n      <h2>{props.name}</h2>\n\n      {isLoading ? (\n        <Table\n          loading\n          pagination={{\n            defaultPageSize: 50,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\"],\n          }}\n          bordered\n          className=\"ant-contest-table\"\n          columns={columns}\n          dataSource={problemData2}\n          locale={{\n            emptyText: (\n              <React.Fragment>\n                <br />\n                Now Loading!!!!\n              </React.Fragment>\n            ),\n          }}\n        />\n      ) : (\n        <Table\n          pagination={{\n            defaultPageSize: 50,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\"],\n          }}\n          bordered\n          className=\"ant-contest-table\"\n          columns={columns}\n          dataSource={problemData2}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContestTable;\n","import React from \"react\";\n\nimport { Radio, Switch } from \"antd\";\n\nimport ContestTable from \"./ContestTable\";\nimport { useLocalStorage } from \"../../utils/localStorage\";\n\ninterface Props {\n  userId: string | undefined;\n}\n\nconst TableTabButtons: React.FunctionComponent<Props> = (props: Props) => {\n  const [contest, setContest] = React.useState(\"Educational Codeforces Rounds\");\n  const [isShowDifficulty, setIsShowDifficulty] = useLocalStorage(\n    \"isShowDifficulty\",\n    true\n  );\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"show-diff-btn\">\n          {isShowDifficulty ? (\n            <Switch\n              size=\"small\"\n              defaultChecked\n              onChange={(e) => {\n                setIsShowDifficulty(!isShowDifficulty);\n              }}\n            />\n          ) : (\n            <Switch\n              size=\"small\"\n              onChange={(e) => {\n                setIsShowDifficulty(!isShowDifficulty);\n              }}\n            />\n          )}\n        </div>\n        <label className=\"show-diff-btn\">Show Difficulty</label>\n      </div>\n\n      <Radio.Group\n        value={contest}\n        id=\"radio-buttons\"\n        size=\"large\"\n        onChange={(e) => {\n          setContest(e.target.value);\n        }}\n      >\n        <Radio.Button value=\"Educational Codeforces Rounds\">ECR</Radio.Button>\n        <Radio.Button value=\"Codeforces Global Rounds\">CGR</Radio.Button>\n        <Radio.Button value=\"Div. 1 Contests\">Div1</Radio.Button>\n        <Radio.Button value=\"Div. 2 Contests\">Div2</Radio.Button>\n        <Radio.Button value=\"Div. 3 Contests\">Div3</Radio.Button>\n        <Radio.Button value=\"Div. 4 Contests\">Div4</Radio.Button>\n        <Radio.Button value=\"Microsoft Q# Coding Contests\">Q#</Radio.Button>\n        <Radio.Button value=\"All Contests\">All</Radio.Button>{\" \"}\n      </Radio.Group>\n      <ContestTable\n        name={contest}\n        isShowDifficulty={isShowDifficulty}\n        userId={props.userId}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default TableTabButtons;\n","import React from \"react\";\nimport Header from \"../../components/Header/Header\";\n\nimport TableTabButtons from \"./TableTab\";\n\ninterface Props {\n  userId: string | undefined;\n}\n\nconst TablePage: React.FunctionComponent<Props> = (props: Props) => {\n  return (\n    <>\n      <Header userId={props.userId} location=\"table\" />\n      <div className=\"Main\">\n        <TableTabButtons userId={props.userId} />\n      </div>\n    </>\n  );\n};\n\nexport default TablePage;\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nconst UserNotFound: React.FunctionComponent = (props) => {\n  return <Alert message=\"User not found!\" type=\"error\" />;\n};\n\nexport default UserNotFound;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loading: React.FunctionComponent = (props) => {\n  return <Spin size=\"large\" />;\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { getRatingColorClass } from \"../../utils/colors\";\nimport { Tooltip } from \"antd\";\n\nimport TopcoderLikeCircle from \"../../components/TopcoderLikeCircle\";\n\ninterface Props {\n  userId: string;\n  rating: number;\n}\n\nconst UserNameLabel: React.FunctionComponent<Props> = (props: Props) => {\n  const c = getRatingColorClass(props.rating);\n  const userRatingCircle =\n    props.rating === undefined ? (\n      <Tooltip title=\"Unrated\" color=\"black\">\n        <div className=\"difficulty-unavailable-circle\">\n          <span className=\"big-difficulty-circle\"></span>\n        </div>\n      </Tooltip>\n    ) : (\n      <Tooltip title={\"Rating: \" + String(props.rating)} color=\"black\">\n        <TopcoderLikeCircle rating={props.rating} big={true} />{\" \"}\n      </Tooltip>\n    );\n\n  return (\n    <h3>\n      {userRatingCircle}{\" \"}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={\"https://codeforces.com/profile/\" + props.userId}\n        className={c}\n      >\n        {props.userId}\n      </a>\n    </h3>\n  );\n};\n\nexport default UserNameLabel;\n","import React from \"react\";\nimport { Row, Col, Badge, Tooltip } from \"antd\";\n\ninterface Props {\n  userId: string;\n  solvedCountAll: number;\n  solvedCountLastYear: number;\n  solvedCountLastMonth: number;\n  longestStreak: number;\n  currentStreak: number;\n  streakSum: number;\n}\n\nconst colProps = {\n  xxl: 8,\n  xl: 8,\n  lg: 8,\n  md: 8,\n  sm: 8,\n  xs: 12,\n};\n\nconst badge = (\n  <Tooltip title=\"Each achievement is based on Local Time.\" color=\"black\">\n    <span>\n      <Badge\n        title=\"\"\n        count=\"?\"\n        style={{ backgroundColor: \"#6c757d\", borderColor: \"#6c757d\" }}\n      />\n    </span>\n  </Tooltip>\n);\n\nconst Achievement: React.FunctionComponent<Props> = (props: Props) => {\n  return (\n    <React.Fragment>\n      <h3>Achievements {badge}</h3>\n      <hr />\n\n      <Row gutter={10}>\n        <Col {...colProps} key=\"solved-all\" className=\"achievement-item\">\n          <h6>solved for all time</h6>\n          <h4>{props.solvedCountAll} problems</h4>\n        </Col>\n        <Col {...colProps} key=\"solved-year\" className=\"achievement-item\">\n          <h6>solved for the last year</h6>\n          <h4>{props.solvedCountLastYear} problems</h4>\n        </Col>\n        <Col {...colProps} key=\"solved-month\" className=\"achievement-item\">\n          <h6>solved for the last month</h6>\n          <h4>{props.solvedCountLastMonth} problems</h4>\n        </Col>\n      </Row>\n      <Row gutter={10}>\n        <Col {...colProps} key=\"longest-streak\" className=\"achievement-item\">\n          <h6>Longest Streak</h6>\n          <h4>{props.longestStreak} days</h4>\n        </Col>\n        <Col {...colProps} key=\"current-streak\" className=\"achievement-item\">\n          <h6>Current Streak</h6>\n          <h4>{props.currentStreak} days</h4>\n        </Col>\n        <Col {...colProps} key=\"streak-sum\" className=\"achievement-item\">\n          <h6>Streak Sum</h6>\n          <h4>{props.streakSum} days</h4>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Achievement;\n","export const formatFullDate = (dateSecond: number): string => {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  const hh = String(date.getHours()).padStart(2, \"0\");\n  const min = String(date.getMinutes()).padStart(2, \"0\");\n  const sec = String(date.getSeconds()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd} ${hh}:${min}:${sec}`;\n};\n\nexport const formatDate = (dateSecond: number): string => {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd}`;\n};\n","import React from \"react\";\n\nimport { Table, Tooltip } from \"antd\";\nimport TopcoderLikeCircle from \"../../components/TopcoderLikeCircle\";\nimport { getRatingColorClass } from \"../../utils/colors\";\nimport { formatFullDate } from \"../../utils/formatDate\";\n\nconst columns = [\n  {\n    title: \"Date\",\n    dataIndex: \"creationTimeSeconds\",\n    key: \"creationTimeSeconds\",\n  },\n  {\n    title: \"Problem\",\n    dataIndex: \"problem\",\n    key: \"problem\",\n  },\n  {\n    title: \"Verdict\",\n    dataIndex: \"verdict\",\n    key: \"verdict\",\n  },\n  {\n    title: \"Language\",\n    dataIndex: \"programmingLanguage\",\n    key: \"programmingLanguage\",\n  },\n  {\n    title: \"Detail\",\n    dataIndex: \"detail\",\n    key: \"detail\",\n  },\n];\n\ninterface Props {\n  submission: any[];\n}\n\nconst SubmissionListTable: React.FunctionComponent<Props> = (props: Props) => {\n  const dataSource = props.submission.map((x) => {\n    const submissionSecond = x.creationTimeSeconds;\n    const rating: number | undefined = x.problem.rating;\n    const difficultyCircle =\n      rating === undefined ? (\n        <Tooltip title=\"Difficulty is unavailable.\" color=\"black\">\n          <div className=\"difficulty-unavailable-circle\">\n            <span className=\"common-difficulty-circle\"></span>\n          </div>\n        </Tooltip>\n      ) : (\n        <Tooltip title={\"Difficulty: \" + String(rating)} color=\"black\">\n          {\" \"}\n          <span>\n            <TopcoderLikeCircle rating={rating} />\n          </span>\n        </Tooltip>\n      );\n\n    const contestId: string = String(x.problem.contestId);\n    const problemIndex: string = String(x.problem.index);\n    const submissionId: string = String(x.submissionId);\n    const submissionUrl: string =\n      \"https://codeforces.com/contest/\" +\n      contestId +\n      \"/submission/\" +\n      submissionId;\n    const problemUrl: string =\n      \"https://codeforces.com/contest/\" +\n      contestId +\n      \"/problem/\" +\n      problemIndex;\n\n    let verdict = x.verdict;\n    switch (verdict) {\n      case undefined:\n        verdict = \"unknown\";\n        break;\n      case \"OK\":\n        verdict = <div className=\"verdict-accepted\">Accepted</div>;\n        break;\n      case \"WRONG_ANSWER\":\n        verdict = <div className=\"verdict-rejected\">Wrong answer</div>;\n        break;\n      case \"TIME_LIMIT_EXCEEDED\":\n        verdict = <div className=\"verdict-rejected\">Time limit exceeded</div>;\n        break;\n      case \"COMPILATION_ERROR\":\n        verdict = <div className=\"verdict-rejected\">Compilation error</div>;\n        break;\n      case \"MEMORY_LIMIT_EXCEEDED\":\n        verdict = <div className=\"verdict-rejected\">Memory limit exceeded</div>;\n        break;\n      case \"RUNTIME_ERROR\":\n        verdict = <div className=\"verdict-rejected\">Runtime error</div>;\n        break;\n      case \"PRESENTATION_ERROR\":\n        verdict = <div className=\"verdict-rejected\">Presentation error</div>;\n        break;\n      case \"IDLENESS_LIMIT_EXCEEDED\":\n        verdict = (\n          <div className=\"verdict-rejected\">Idleness limit exceeded</div>\n        );\n        break;\n    }\n\n    const obj = {\n      key: String(x.creationTimeSeconds),\n      creationTimeSeconds: (\n        <div className=\"cell-element\">{formatFullDate(submissionSecond)}</div>\n      ),\n      problem: (\n        <div className=\"cell-element\">\n          {difficultyCircle}\n          <a\n            href={problemUrl}\n            target=\"_blank\"\n            rel=\"noopenner noreferrer\"\n            className={getRatingColorClass(rating)}\n          >\n            {String(x.problem.index) + \". \" + String(x.problem.name)}\n          </a>\n        </div>\n      ),\n      programmingLanguage: (\n        <div className=\"cell-element\">{String(x.programmingLanguage)}</div>\n      ),\n      verdict: <div className=\"cell-element\">{verdict}</div>,\n      detail: (\n        <div className=\"cell-element\">\n          <a href={submissionUrl} target=\"_blank\" rel=\"noopenner noreferrer\">\n            Detail\n          </a>\n        </div>\n      ),\n    };\n    return obj;\n  });\n\n  return (\n    <React.Fragment>\n      <h3>Submissions</h3>\n      <hr />\n      <br />\n      <Table bordered={true} dataSource={dataSource} columns={columns} />\n    </React.Fragment>\n  );\n};\n\nexport default SubmissionListTable;\n","import { RatingColor, getRatingColorCode } from \"../../utils/colors\";\n\nimport { formatDate } from \"../../utils/formatDate\";\n\ninterface DailyEffortTooltipPayload {\n  value: number;\n  dataKey: RatingColor;\n}\n\ninterface CustomTooltipProps {\n  active?: boolean;\n  payload?: DailyEffortTooltipPayload[];\n  label: number;\n}\n\nexport const CustomTooltip: React.FunctionComponent<CustomTooltipProps> = (\n  props\n) => {\n  if (!props.active || props.payload === undefined) return null;\n\n  const dateSecond = props.label;\n\n  return (\n    <div\n      className=\"recharts-default-tooltip\"\n      style={{\n        margin: \"0px\",\n        padding: \"10px\",\n        backgroundColor: \"rgb(255, 255, 255)\",\n        border: \"1px solid rgb(204, 204, 204)\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      <p className=\"recharts-tooltip-label\" style={{ margin: \"0px\" }}>\n        {formatDate(dateSecond)}\n      </p>\n\n      <ul\n        className=\"recharts-tooltip-item-list\"\n        style={{ padding: \"0px\", margin: \"0px\" }}\n      >\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: \"4px\",\n            paddingBottom: \"4px\",\n            color: \"rgb(136, 132, 216)\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">count</span>\n          <span className=\"recharts-tooltip-item-separator\"> : </span>\n          <span className=\"recharts-tooltip-item-value\">\n            {props.payload.reduce(\n              (acc: number, entry: DailyEffortTooltipPayload) =>\n                acc + entry.value,\n              0\n            )}\n          </span>\n        </li>\n      </ul>\n\n      <hr style={{ marginTop: \"0.3em\", marginBottom: \"0.3em\" }} />\n\n      <div>\n        {props.payload &&\n          props.payload\n            .slice()\n            .reverse()\n            .map((entry: DailyEffortTooltipPayload) => {\n              if (entry.value <= 0) return null;\n              return (\n                <div\n                  key={entry.dataKey}\n                  style={{ color: getRatingColorCode(entry.dataKey) }}\n                >\n                  {entry.dataKey === \"Black\" ? \"Other\" : entry.dataKey}\n                  {\" : \"}\n                  {entry.value}\n                </div>\n              );\n            })}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { ratingColors, getRatingColorCode } from \"../../utils/colors\";\n\nimport { CustomTooltip } from \"./CustomTooltip\";\nimport { formatDate } from \"../../utils/formatDate\";\n\ninterface Props {\n  solvedHistory: object[];\n}\n\nconst ClimbingChart: React.FunctionComponent<Props> = (props) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <AreaChart\n        data={props.solvedHistory}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"dateSecond\"\n          domain={[\"dataMin\", \"dataMax\"]}\n          type=\"number\"\n          tickFormatter={(dateSecond: number): string => formatDate(dateSecond)}\n        />\n\n        <YAxis />\n        <Tooltip content={<CustomTooltip label={1} />} />\n\n        {ratingColors.map((ratingColor) => {\n          const colorCode: string = getRatingColorCode(ratingColor);\n          return (\n            <Area\n              type=\"linear\"\n              key={ratingColor}\n              dataKey={ratingColor === \"Black\" ? \"Other\" : ratingColor}\n              stackId=\"1\"\n              stroke={colorCode}\n              fill={colorCode}\n            />\n          );\n        })}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\ninterface Props {\n  solvedHistory: object[];\n}\n\nconst Climbing: React.FunctionComponent<Props> = (props: Props) => {\n  return (\n    <React.Fragment>\n      <h3>Climbing</h3>\n      <hr />\n      <ClimbingChart solvedHistory={props.solvedHistory} />\n    </React.Fragment>\n  );\n};\n\nexport default Climbing;\n","import React from \"react\";\n\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\nimport { Select } from \"antd\";\n\ninterface Props {\n  data: any[];\n}\n\nconst Customtooltip = (x: any) => {\n  return (\n    <React.Fragment>\n      {x.value ? (\n        <div\n          style={{\n            background: \"black\",\n            color: \"white\",\n            padding: \"8px\",\n            borderRadius: \"10px\",\n            textAlign: \"center\",\n          }}\n        >\n          {x.day}\n          <br />\n          {x.value} submissions\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\ninterface CalendarProps {\n  data: any[];\n  year: string;\n}\n\nconst MyResponsiveCalendar = (props: CalendarProps) => {\n  return (\n    <ResponsiveCalendar\n      data={props.data}\n      from={props.year + \"-01-01\"}\n      to={props.year + \"-12-31\"}\n      emptyColor=\"#ebedf0\"\n      colors={[\"#C6E48B\", \"#7BC96F\", \"#239A3B\", \"#196127\"]}\n      minValue=\"auto\"\n      margin={{ top: 5, right: 5, bottom: 5, left: 25 }}\n      yearSpacing={45}\n      monthBorderColor=\"#ffffff\"\n      dayBorderWidth={2}\n      dayBorderColor=\"#ffffff\"\n      tooltip={Customtooltip}\n      legends={[\n        {\n          anchor: \"bottom-right\",\n          direction: \"row\",\n          translateY: 36,\n          itemCount: 4,\n          itemWidth: 42,\n          itemHeight: 36,\n          itemsSpacing: 14,\n          itemDirection: \"right-to-left\",\n        },\n      ]}\n    />\n  );\n};\n\nconst Heatmap: React.FunctionComponent<Props> = (props: Props) => {\n  const yearsSet: Set<string> = new Set();\n  props.data.forEach((x) => {\n    yearsSet.add(x.day.slice(0, 4));\n  });\n\n  let years: string[] = Array.from(yearsSet);\n  years.reverse();\n\n  const [selectYear, setSelectYear] = React.useState(years[0]);\n\n  React.useEffect(() => {}, []);\n\n  return (\n    <React.Fragment>\n      <h3>Heatmap</h3>\n      <hr />\n\n      <div style={{ height: 200, marginBottom: 50 }}>\n        <div style={{ textAlign: \"right\", paddingTop: \"20px\" }}>\n          {years.length > 0 && (\n            <Select\n              defaultValue=\"Choose year\"\n              style={{ width: 120, textAlign: \"left\" }}\n              onChange={(value) => {\n                setSelectYear(value);\n              }}\n            >\n              {years.map((year: string) => (\n                <Select.Option value={year} key={year}>\n                  {year}\n                </Select.Option>\n              ))}\n            </Select>\n          )}\n        </div>\n\n        <MyResponsiveCalendar data={props.data} year={selectYear} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Heatmap;\n","import { getRatingColor } from \"../../utils/colors\";\n\nfunction formatDate(dateSecond: number): string {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd}`;\n}\n\nexport const makeSolvedHistory = (submission: any[]) => {\n  let count = 0;\n  let cntRed = 0;\n  let cntOrange = 0;\n  let cntViolet = 0;\n  let cntBlue = 0;\n  let cntCyan = 0;\n  let cntGreen = 0;\n  let cntGrey = 0;\n  let cntOther = 0;\n\n  let solvedHistory: any[] = [];\n\n  let isSolved = new Map();\n  const revSubmission: any[] = submission.slice().reverse();\n\n  let newRevSubmission = [] as any[];\n  revSubmission.forEach((x) => {\n    if (x.verdict !== \"OK\") {\n      return;\n    }\n\n    const p = x.problem;\n    const problemId = String(p.contestId) + \":\" + String(p.index);\n\n    if (isSolved.get(problemId)) {\n      return;\n    }\n\n    isSolved.set(problemId, true);\n    newRevSubmission.push(x);\n  });\n\n  const numSubmission: number = newRevSubmission.length;\n\n  for (let i = 0; i < numSubmission; i++) {\n    const x = newRevSubmission[i];\n\n    count++;\n\n    const color = getRatingColor(x.problem.rating);\n\n    switch (color) {\n      case \"Red\":\n        cntRed++;\n        break;\n      case \"Orange\":\n        cntOrange++;\n        break;\n      case \"Violet\":\n        cntViolet++;\n        break;\n      case \"Blue\":\n        cntBlue++;\n        break;\n      case \"Cyan\":\n        cntCyan++;\n        break;\n      case \"Green\":\n        cntGreen++;\n        break;\n      case \"Grey\":\n        cntGrey++;\n        break;\n      case \"Black\":\n        cntOther++;\n        break;\n    }\n\n    const dateSecond = x.creationTimeSeconds;\n    if (\n      i !== numSubmission - 1 &&\n      numSubmission > 1 &&\n      formatDate(dateSecond) ===\n        formatDate(newRevSubmission[i + 1].creationTimeSeconds)\n    ) {\n      continue;\n    }\n\n    solvedHistory.push({\n      dateSecond: dateSecond,\n      dateFormat: formatDate(dateSecond),\n      count: count,\n      Red: cntRed,\n      Orange: cntOrange,\n      Violet: cntViolet,\n      Blue: cntBlue,\n      Cyan: cntCyan,\n      Green: cntGreen,\n      Grey: cntGrey,\n      Other: cntOther,\n    });\n  }\n\n  return solvedHistory;\n};\n","function formatDate(dateSecond: number): string {\n  const date = new Date(dateSecond * 1000);\n  const yyyy = String(date.getFullYear());\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n  return `${yyyy}-${mm}-${dd}`;\n}\n\nexport const makeSubmissionHistory = (submission: any[]) => {\n  let count = 0;\n  let submissionHistory: any[] = [];\n  const revSubmission: any[] = submission.slice().reverse();\n  const numSubmission = revSubmission.length;\n\n  for (let i = 0; i < numSubmission; i++) {\n    if (\n      i !== numSubmission - 1 &&\n      formatDate(revSubmission[i].creationTimeSeconds) ===\n        formatDate(revSubmission[i + 1].creationTimeSeconds)\n    ) {\n      count++;\n      continue;\n    }\n\n    submissionHistory.push({\n      day: formatDate(revSubmission[i].creationTimeSeconds),\n      value: count + 1,\n    });\n    count = 0;\n  }\n\n  return submissionHistory;\n};\n","import { formatDate } from \"../../utils/formatDate\";\n\nexport const fetchUserSubmission = async (url: string): Promise<any> => {\n  let submission: any[] = [];\n\n  await fetch(url)\n    .then((res) => res.json())\n    .then((x) => {\n      submission = x.result?.map((e: any) => {\n        let obj = {\n          creationTimeSeconds: e.creationTimeSeconds,\n          problem: e.problem,\n          verdict: e.verdict,\n          programmingLanguage: e.programmingLanguage,\n          submissionId: e.id,\n        };\n        return obj;\n      });\n    })\n    .catch((error) => {\n      console.log(\"Error: \", error.message);\n      return [];\n    });\n\n  return submission;\n};\n\nexport const makeAchievementData = (submission: any[]) => {\n  let isSolved = new Map();\n  let isSolvedDay = new Map();\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n\n  let cntSolveLastYear = 0;\n  let cntSolveLastMonth = 0;\n\n  let uniqDaySubmissions: number[] = [];\n  submission.forEach((x) => {\n    if (x.verdict !== \"OK\") {\n      return;\n    }\n    const time = new Date(x.creationTimeSeconds * 1000);\n    const problemId =\n      String(x.problem.contestId) + \":\" + String(x.problem.index);\n\n    if (isSolved.get(problemId) === undefined) {\n      if (month === 1) {\n        if (time.getMonth() === 12 && time.getFullYear() === year - 1) {\n          cntSolveLastMonth++;\n        }\n      } else {\n        if (time.getMonth() === month - 1 && time.getFullYear() === year) {\n          cntSolveLastMonth++;\n        }\n      }\n      if (time.getFullYear() === year - 1) {\n        cntSolveLastYear++;\n      }\n      isSolved.set(problemId, true);\n\n      const formatted = formatDate(time.getTime() / 1000);\n      if (isSolvedDay.get(formatted) === undefined) {\n        isSolvedDay.set(formatted, true);\n        uniqDaySubmissions.push(x.creationTimeSeconds);\n      }\n    }\n  });\n  let cntCurrentStreak = 0;\n  let tmpTime = today;\n  for (let i = 0; i < uniqDaySubmissions.length; i++) {\n    const x = uniqDaySubmissions[i];\n    const e = formatDate(x);\n\n    if (formatDate(tmpTime.getTime() / 1000) === e) {\n      cntCurrentStreak++;\n    } else {\n      break;\n    }\n    tmpTime = new Date(tmpTime.getTime() - 24 * 3600 * 1000);\n  }\n\n  uniqDaySubmissions.reverse();\n\n  let cntLongestStreak = 0;\n  let tmp = 0;\n  for (let i = 0; i < uniqDaySubmissions.length; i++) {\n    if (i === 0) {\n      cntLongestStreak = 1;\n      tmp = 1;\n      continue;\n    }\n    const lastTime: string = formatDate(uniqDaySubmissions[i] - 24 * 3600);\n    const prevTime: string = formatDate(uniqDaySubmissions[i - 1]);\n\n    if (lastTime === prevTime) {\n      tmp++;\n    } else {\n      tmp = 1;\n    }\n    cntLongestStreak = Math.max(cntLongestStreak, tmp);\n  }\n\n  return {\n    submission: submission,\n    solvedCountAll: isSolved.size,\n    solvedCountLastYear: cntSolveLastYear,\n    solvedCountLastMonth: cntSolveLastMonth,\n    longestStreak: cntLongestStreak,\n    currentStreak: cntCurrentStreak,\n    streakSum: isSolvedDay.size,\n  };\n};\n","import React from \"react\";\nimport Header from \"../..//components/Header/Header\";\nimport UserNotFound from \"./UserNotFound\";\nimport Loading from \"./Loading\";\nimport UserNameLabel from \"./UserNameLabel\";\nimport Achievement from \"./Achievement\";\nimport SubmissionListTable from \"./SubmissionListTable\";\nimport Climbing from \"./Climbing\";\nimport Heatmap from \"./Heatmap\";\n\nimport { makeSolvedHistory } from \"./makeSolvedHistory\";\nimport { makeSubmissionHistory } from \"./makeSubmissionHistory\";\nimport { fetchUserSubmission, makeAchievementData } from \"./userUtils\";\nimport { cachedUserInfo } from \"../../utils/TypedCachedApiClient\";\n\ninterface Props {\n  userId: string;\n}\n\nconst User: React.FunctionComponent<Props> = (props: Props) => {\n  const [isUserExist, setIsUserExist] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [userRating, setUserRating] = React.useState(0);\n  const [userSubmission, setUserSubmission] = React.useState([] as any[]);\n  const [userInfo, setUserInfo] = React.useState({\n    solvedCountAll: 0,\n    solvedCountLastYear: 0,\n    solvedCountLastMonth: 0,\n    longestStreak: 0,\n    currentStreak: 0,\n    streakSum: 0,\n    solvedHistory: [] as any[],\n    submissionHistory: [] as any[],\n  });\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    let isMounted = true;\n\n    const getUserInfo = async (userId: string) => {\n      const str = \"https://codeforces.com/api/user.status?handle=\";\n      const userInfo = await cachedUserInfo(props.userId);\n\n      if (userInfo.isUserExist) {\n        const submissions = await fetchUserSubmission(str + userId);\n        const res = makeAchievementData(submissions);\n        if (isMounted) {\n          setIsLoading(false);\n          setUserSubmission(submissions);\n          setUserInfo({\n            solvedCountAll: res.solvedCountAll,\n            solvedCountLastYear: res.solvedCountLastYear,\n            solvedCountLastMonth: res.solvedCountLastMonth,\n            longestStreak: res.longestStreak,\n            currentStreak: res.currentStreak,\n            streakSum: res.streakSum,\n            solvedHistory: makeSolvedHistory(submissions),\n            submissionHistory: makeSubmissionHistory(submissions),\n          });\n          setIsUserExist(userInfo.isUserExist);\n          setUserRating(userInfo.userRating);\n        }\n      } else {\n        if (isMounted) {\n          setIsLoading(false);\n          setIsUserExist(userInfo.isUserExist);\n        }\n      }\n    };\n\n    void getUserInfo(props.userId);\n\n    return () => {\n      isMounted = false;\n    };\n  }, [props.userId]);\n\n  const element = isUserExist ? (\n    <>\n      <UserNameLabel userId={props.userId} rating={userRating} />\n      <hr />\n      <Achievement\n        userId={props.userId}\n        solvedCountAll={userInfo.solvedCountAll}\n        solvedCountLastYear={userInfo.solvedCountLastYear}\n        solvedCountLastMonth={userInfo.solvedCountLastMonth}\n        longestStreak={userInfo.longestStreak}\n        currentStreak={userInfo.currentStreak}\n        streakSum={userInfo.streakSum}\n      />\n      <Climbing solvedHistory={userInfo.solvedHistory} />\n      <Heatmap data={userInfo.submissionHistory} />\n      <SubmissionListTable submission={userSubmission} />\n    </>\n  ) : (\n    <UserNotFound />\n  );\n  const a = isLoading ? <Loading /> : element;\n\n  return (\n    <>\n      <Header userId={props.userId} location=\"user\" />\n      <div className=\"Main\">{a}</div>\n    </>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport ThemeProvider from \"./components/ThemeProvider\";\nimport TablePage from \"./pages/TablePage/index\";\nimport User from \"./pages/UserPage/index\";\n\nconst App: React.FunctionComponent = () => (\n  <ThemeProvider>\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route\n            path=\"/table/:userIds([a-zA-Z0-9_]*)*\"\n            render={({ match }): React.ReactElement => {\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              const params: { userIds?: string } = match.params;\n              const userId = params.userIds === undefined ? \"\" : params.userIds;\n              return <TablePage userId={userId} />;\n            }}\n          />\n          <Route\n            path=\"/user/:userIds([a-zA-Z0-9_]*)*\"\n            render={({ match }): React.ReactElement => {\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              const params: { userIds?: string } = match.params;\n              const userId = params.userIds === undefined ? \"\" : params.userIds;\n              return <User userId={userId} />;\n            }}\n          />\n\n          {/*Default Path*/}\n          <Redirect path=\"/\" to=\"/table/\" />\n        </Switch>\n      </div>\n    </HashRouter>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style/index.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}