{"version":3,"sources":["components/ThemeProvider.tsx","utils/localStorage.ts","reportWebVitals.ts","App.tsx","index.tsx"],"names":["ThemeContext","React","createContext","Error","useTheme","useContext","ThemeProvider","props","useLocalStorage","themeId","setThemeId","Provider","value","className","children","key","defaultValue","a","localStorage","getItem","useState","JSON","parse","setValue","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TablePage","lazy","User","App","fallback","path","render","params","match","userId","undefined","userIds","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"yPAOaA,EAAeC,IAAMC,cAAiC,CACjE,QACA,WACE,MAAM,IAAIC,MAAM,qCAwBPC,EAAW,WAAO,IAAD,EACVH,IAAMI,WAAWL,GAEnC,OAH4B,qBAMfM,IAtB4C,SACzDC,GACI,IAAD,EAC2BC,YAAwB,QAAS,SAD5D,mBACIC,EADJ,KACaC,EADb,KAGH,OACE,eAACV,EAAaW,SAAd,CAAuBC,MAAO,CAACH,EAASC,GAAxC,UACE,cAAC,IAAD,UACE,sBAAMG,UAAS,gBAAWJ,OAG3BF,EAAMO,c,6FC3BAN,EAAkB,SAAIO,EAAaC,GAC9C,IAAMC,EAAIC,aAAaC,QAAQJ,GADmC,EAExCd,IAAMmB,SAASH,EAAII,KAAKC,MAAML,GAAKD,GAFK,mBAE3DJ,EAF2D,KAEpDW,EAFoD,KAQlE,OAJAtB,IAAMuB,WAAU,WACdN,aAAaO,QAAQV,EAAKM,KAAKK,UAAUd,MACxC,CAACA,EAAOG,IAEJ,CAACH,EAAOW,K,iGCIFI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sCCJRQ,EAAYC,gBAAK,kBAAM,8DACvBC,EAAOD,gBAAK,kBAAM,qEAoCTE,EAlCsB,kBACnC,cAACjC,EAAA,EAAD,UACE,cAAC,IAAD,UACE,qBAAKO,UAAU,MAAf,SACE,cAAC,WAAD,CAAU2B,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,mCACLC,OAAQ,YAAoC,IAEpCC,EAFmC,EAAhCC,MAEkCD,OACrCE,OAA4BC,IAAnBH,EAAOI,QAAwB,GAAKJ,EAAOI,QAC1D,OAAO,cAACX,EAAD,CAAWS,OAAQA,OAG9B,cAAC,IAAD,CACEJ,KAAK,kCACLC,OAAQ,YAAoC,IAEpCC,EAFmC,EAAhCC,MAEkCD,OACrCE,OAA4BC,IAAnBH,EAAOI,QAAwB,GAAKJ,EAAOI,QAC1D,OAAO,cAACT,EAAD,CAAMO,OAAQA,OAKzB,cAAC,IAAD,CAAUJ,KAAK,IAAIO,GAAG,wBC1BlCC,IAASP,OACP,cAAC,IAAMQ,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.431d0c26.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocalStorage } from \"../utils/localStorage\";\n\ntype ThemeId = \"light\" | \"dark\" | \"purple\";\ntype ThemeContextProps = [ThemeId, (newThemeId: ThemeId) => void];\n\nexport const ThemeContext = React.createContext<ThemeContextProps>([\n  \"light\",\n  (): void => {\n    throw new Error(\"setThemeId is not implemented.\");\n  },\n]);\n\ninterface ThemeProviderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = (\n  props: ThemeProviderProps\n) => {\n  const [themeId, setThemeId] = useLocalStorage<string>(\"theme\", \"light\");\n\n  return (\n    <ThemeContext.Provider value={[themeId, setThemeId]}>\n      <Helmet>\n        <html className={`theme-${themeId}`} />\n      </Helmet>\n\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const [themeId] = React.useContext(ThemeContext);\n\n  return themeId;\n};\n\nexport default ThemeProvider;\n","import React from \"react\";\n\nexport const useLocalStorage = <T>(key: string, defaultValue: T) => {\n  const a = localStorage.getItem(key);\n  const [value, setValue] = React.useState(a ? JSON.parse(a) : defaultValue);\n\n  React.useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense, lazy} from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport ThemeProvider from \"./components/ThemeProvider\";\n\nconst TablePage = lazy(() => import(\"./pages/TablePage/index\") );\nconst User = lazy(() => import(\"./pages/UserPage/index\") );\n\nconst App: React.FunctionComponent = () => (\n  <ThemeProvider>\n    <HashRouter>\n      <div className=\"App\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route\n              path=\"/table/:userIds([a-zA-Z0-9_.]*)*\"\n              render={({ match }): React.ReactElement => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const params: { userIds?: string } = match.params;\n                const userId = params.userIds === undefined ? \"\" : params.userIds;\n                return <TablePage userId={userId} />;\n              }}\n            />\n            <Route\n              path=\"/user/:userIds([a-zA-Z0-9_.]*)*\"\n              render={({ match }): React.ReactElement => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const params: { userIds?: string } = match.params;\n                const userId = params.userIds === undefined ? \"\" : params.userIds;\n                return <User userId={userId} />;\n              }}\n            />\n\n            {/*Default Path*/}\n            <Redirect path=\"/\" to=\"/table/\" />\n          </Switch>\n        </Suspense>\n      </div>\n    </HashRouter>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style/index.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}